package ru.egupov.risktestsystem.services;

import org.springframework.stereotype.Service;
import ru.egupov.risktestsystem.models.Question;
import ru.egupov.risktestsystem.models.Teacher;
import ru.egupov.risktestsystem.models.TestExemp;
import ru.egupov.risktestsystem.models.Variant;

@Service
public class StartService {
    private final TeacherService teacherService;
    private final TestExempService testExempService;

    private final QuestionService questionService;

    private final VariantService variantService;

    public StartService(TeacherService teacherService, TestExempService testExempService, QuestionService questionService, VariantService variantService) {
        this.teacherService = teacherService;
        this.testExempService = testExempService;
        this.questionService = questionService;
        this.variantService = variantService;
    }

    public void doIt(){
        Teacher teacher = new Teacher();
        teacher.setName("Тесты Теория риска и моделирование рисковых ситуаций");
        teacher.setEmail("mrs@mrs.ru");
        teacher.setTel("+7999");
        teacherService.add(teacher);

        Teacher teacher2 = new Teacher();
        teacher2.setName("Тесты Риск менеджмент");
        teacher2.setEmail("rm@rm.ru");
        teacher2.setTel("+7999");
        teacherService.add(teacher2);

        TestExemp testExemp777 = new TestExemp();
        testExemp777.setTeacher(teacher);
        testExemp777.setName("Основы теории риска и МРС");
        testExempService.save(testExemp777);

        TestExemp testExemp999 = new TestExemp();
        testExemp999.setTeacher(teacher2);
        testExemp999.setName("Основы риск-менеджмента");
        testExempService.save(testExemp999);

        fill999(testExemp999);
        fill777(testExemp777);

    }

    public void fill777(TestExemp testExemp777){
        Question question1 = new Question();
        question1.setTestExemp(testExemp777);
        question1.setMaxCount(1);
        question1.setName("Причины неопределённости в экономике и бизнесе:");
        questionService.save(question1);
        Variant variant1 = new Variant();
        variant1.setQuestion(question1);
        variant1.setName("не знание;");
        variantService.save(variant1);
        Variant variant2 = new Variant();
        variant2.setQuestion(question1);
        variant2.setName("случайность, противодействие;");
        variantService.save(variant2);
        Variant variant3 = new Variant();
        variant3.setQuestion(question1);
        variant3.setName(" не знание, случайность, противодействие.");
        variant3.setCorrect(true);
        variantService.save(variant3);
        Question question2 = new Question();
        question2.setTestExemp(testExemp777);
        question2.setMaxCount(1);
        question2.setName("«Чистая» неопределенность в отличие от «спекулятивной»:");
        questionService.save(question2);
        Variant variant4 = new Variant();
        variant4.setQuestion(question2);
        variant4.setName("не связана со спекуляциями на рынках;");
        variantService.save(variant4);
        Variant variant5 = new Variant();
        variant5.setQuestion(question2);
        variant5.setName(" предполагает только возможность негативных отклонений конечного результата деятельности;");
        variant5.setCorrect(true);
        variantService.save(variant5);
        Variant variant6 = new Variant();
        variant6.setQuestion(question2);
        variant6.setName("Предполагает возможность частых отклонений конечного результата деятельности.");
        variantService.save(variant6);
        Question question3 = new Question();
        question3.setTestExemp(testExemp777);
        question3.setMaxCount(1);
        question3.setName("Риск – это");
        questionService.save(question3);
        Variant variant7 = new Variant();
        variant7.setQuestion(question3);
        variant7.setName("проявление фундаментального свойства природы: детерминизма");
        variantService.save(variant7);
        Variant variant8 = new Variant();
        variant8.setQuestion(question3);
        variant8.setName(" это проявление фундаментального свойства природы: индетерминизма");
        variant8.setCorrect(true);
        variantService.save(variant8);
        Variant variant9 = new Variant();
        variant9.setQuestion(question3);
        variant9.setName("это проявление фундаментального свойства природы: индетерминизма, полной не определенности");
        variantService.save(variant9);
        Question question4 = new Question();
        question4.setTestExemp(testExemp777);
        question4.setMaxCount(1);
        question4.setName("Концепция риска как возможности основана на");
        questionService.save(question4);
        Variant variant10 = new Variant();
        variant10.setQuestion(question4);
        variant10.setName(" взаимосвязи между риском и доходностью.");
        variant10.setCorrect(true);
        variantService.save(variant10);
        Variant variant11 = new Variant();
        variant11.setQuestion(question4);
        variant11.setName("взаимосвязи между риском и убытком.");
        variantService.save(variant11);
        Variant variant12 = new Variant();
        variant12.setQuestion(question4);
        variant12.setName("взаимосвязи между страхом и убытком, потерями.");
        variantService.save(variant12);
        Question question5 = new Question();
        question5.setTestExemp(testExemp777);
        question5.setMaxCount(1);
        question5.setName("Риск — это возможность того, что действия человека или их результаты");
        questionService.save(question5);
        Variant variant13 = new Variant();
        variant13.setQuestion(question5);
        variant13.setName("приведут к негативным последствиям");
        variantService.save(variant13);
        Variant variant14 = new Variant();
        variant14.setQuestion(question5);
        variant14.setName("приведут к позитивным последствиям");
        variantService.save(variant14);
        Variant variant15 = new Variant();
        variant15.setQuestion(question5);
        variant15.setName(" приведут к негативным или позитивным последствиям.");
        variant15.setCorrect(true);
        variantService.save(variant15);
        Question question6 = new Question();
        question6.setTestExemp(testExemp777);
        question6.setMaxCount(1);
        question6.setName("Возникновение интереса в России к проявлению риска в хозяйственной деятельности связано");
        questionService.save(question6);
        Variant variant16 = new Variant();
        variant16.setQuestion(question6);
        variant16.setName("с решением Государственной Думы");
        variantService.save(variant16);
        Variant variant17 = new Variant();
        variant17.setQuestion(question6);
        variant17.setName(" с ее переходом к рыночной системе хозяйствования.");
        variant17.setCorrect(true);
        variantService.save(variant17);
        Variant variant18 = new Variant();
        variant18.setQuestion(question6);
        variant18.setName("с рекомендациями учёных экономистов избегать рисковой деятельности");
        variantService.save(variant18);
        Question question7 = new Question();
        question7.setTestExemp(testExemp777);
        question7.setMaxCount(1);
        question7.setName("Риск является мерой");
        questionService.save(question7);
        Variant variant19 = new Variant();
        variant19.setQuestion(question7);
        variant19.setName(" несоответствия между различными результатами решений, которые оценивают с точки зрения их полезности, вредности");
        variant19.setCorrect(true);
        variantService.save(variant19);
        Variant variant20 = new Variant();
        variant20.setQuestion(question7);
        variant20.setName("определенности экономического результата в будущем;");
        variantService.save(variant20);
        Variant variant21 = new Variant();
        variant21.setQuestion(question7);
        variant21.setName("уверенности или невозможности получения ожидаемых результатов.");
        variantService.save(variant21);
        Question question8 = new Question();
        question8.setTestExemp(testExemp777);
        question8.setMaxCount(1);
        question8.setName("Рыночный риск (market risk) — это");
        questionService.save(question8);
        Variant variant22 = new Variant();
        variant22.setQuestion(question8);
        variant22.setName("не возможность очевидных потерь в результате колебаний процентных ставок, курсов валют, цен акций;");
        variantService.save(variant22);
        Variant variant23 = new Variant();
        variant23.setQuestion(question8);
        variant23.setName(" возможность потерь в результате колебаний процентных ставок, курсов валют, цен акций и товарных контрактов;");
        variant23.setCorrect(true);
        variantService.save(variant23);
        Variant variant24 = new Variant();
        variant24.setQuestion(question8);
        variant24.setName("возможность колебаний процентных ставок и цен акций.");
        variantService.save(variant24);
        Question question9 = new Question();
        question9.setTestExemp(testExemp777);
        question9.setMaxCount(1);
        question9.setName("Чем выше рискованность вложения,");
        questionService.save(question9);
        Variant variant25 = new Variant();
        variant25.setQuestion(question9);
        variant25.setName(" тем больше должен быть обещаемый инвестору доход");
        variant25.setCorrect(true);
        variantService.save(variant25);
        Variant variant26 = new Variant();
        variant26.setQuestion(question9);
        variant26.setName("тем меньше должен быть обещаемый инвестору доход");
        variantService.save(variant26);
        Variant variant27 = new Variant();
        variant27.setQuestion(question9);
        variant27.setName("тем осторожнее должен быть обещаемый инвестору доход");
        variantService.save(variant27);
        Question question10 = new Question();
        question10.setTestExemp(testExemp777);
        question10.setMaxCount(1);
        question10.setName("Кредитный риск (credit risk), или риск контрагента (counterparty risk), это:");
        questionService.save(question10);
        Variant variant28 = new Variant();
        variant28.setQuestion(question10);
        variant28.setName("возможность потерь в результате неспособности контрагентов (заемщиков) исполнять свои обязательства по нарушению срока кредитного договора;");
        variantService.save(variant28);
        Variant variant29 = new Variant();
        variant29.setQuestion(question10);
        variant29.setName("возможность потерь в результате только неспособности контрагентов (заемщиков) исполнять свои обязательства, в частности по выплате процентов;");
        variantService.save(variant29);
        Variant variant30 = new Variant();
        variant30.setQuestion(question10);
        variant30.setName(" возможность потерь в результате неспособности контрагентов (заемщиков) исполнять свои обязательства, в частности по выплате процентов и основной суммы долга в соответствии со сроками и условиями кредитного договора;");
        variant30.setCorrect(true);
        variantService.save(variant30);
        Question question11 = new Question();
        question11.setTestExemp(testExemp777);
        question11.setMaxCount(1);
        question11.setName("Операционный риск (operationalrisk) — это:");
        questionService.save(question11);
        Variant variant31 = new Variant();
        variant31.setQuestion(question11);
        variant31.setName("не возможность потерь вследствие умышленных и неумышленных действий персонала, несанкционированного доступа к информационными системам и т. RESP Д.:");
        variantService.save(variant31);
        Variant variant32 = new Variant();
        variant32.setQuestion(question11);
        variant32.setName("возможность умышленных и неумышленных действий персонала, аварийных ситуаций, сбоев аппаратуры:");
        variantService.save(variant32);
        Variant variant33 = new Variant();
        variant33.setQuestion(question11);
        variant33.setName(" возможность потерь вследствие технических ошибок при проведении операций, умышленных и неумышленных действий персонала, аварийных ситуаций, сбоев аппаратуры, несанкционированного доступа к информационными системам и т.д.:");
        variant33.setCorrect(true);
        variantService.save(variant33);
        Question question12 = new Question();
        question12.setTestExemp(testExemp777);
        question12.setMaxCount(1);
        question12.setName("Говорят, что вектор х =(x1...,xn) доминирует (нестрого) вектор у=(y1...,yn).:");
        questionService.save(question12);
        Variant variant34 = new Variant();
        variant34.setQuestion(question12);
        variant34.setName(" если xi ≥ уi. для всех i=1,...,n;");
        variant34.setCorrect(true);
        variantService.save(variant34);
        Variant variant35 = new Variant();
        variant35.setQuestion(question12);
        variant35.setName("если xi > уi. для всех i=1,...,n;");
        variantService.save(variant35);
        Variant variant36 = new Variant();
        variant36.setQuestion(question12);
        variant36.setName("если xi ≥ уi не для всех i=1,...,n.");
        variantService.save(variant36);
        Question question13 = new Question();
        question13.setTestExemp(testExemp777);
        question13.setMaxCount(1);
        question13.setName("Риск, наиболее трудно поддающийся формализации и количественной оценке");
        questionService.save(question13);
        Variant variant37 = new Variant();
        variant37.setQuestion(question13);
        variant37.setName("кредитный");
        variantService.save(variant37);
        Variant variant38 = new Variant();
        variant38.setQuestion(question13);
        variant38.setName("валютный");
        variantService.save(variant38);
        Variant variant39 = new Variant();
        variant39.setQuestion(question13);
        variant39.setName(" операционный");
        variant39.setCorrect(true);
        variantService.save(variant39);
        Question question14 = new Question();
        question14.setTestExemp(testExemp777);
        question14.setMaxCount(1);
        question14.setName("В рыночной экономике решения об уровне риска предприятия принимают");
        questionService.save(question14);
        Variant variant40 = new Variant();
        variant40.setQuestion(question14);
        variant40.setName(" его владельцы и управляющие");
        variant40.setCorrect(true);
        variantService.save(variant40);
        Variant variant41 = new Variant();
        variant41.setQuestion(question14);
        variant41.setName("трудовой коллектив");
        variantService.save(variant41);
        Variant variant42 = new Variant();
        variant42.setQuestion(question14);
        variant42.setName("вышестоящая организация");
        variantService.save(variant42);
        Question question15 = new Question();
        question15.setTestExemp(testExemp777);
        question15.setMaxCount(1);
        question15.setName("Под декомпозицией риска (risk-disaggregation) понимается разложение риска, на отдельные компоненты, стоимость, по крайней мере, некоторых из которых");
        questionService.save(question15);
        Variant variant43 = new Variant();
        variant43.setQuestion(question15);
        variant43.setName("нельзя оценить по рыночным данным");
        variantService.save(variant43);
        Variant variant44 = new Variant();
        variant44.setQuestion(question15);
        variant44.setName(" можно оценить по рыночным данным");
        variant44.setCorrect(true);
        variantService.save(variant44);
        Variant variant45 = new Variant();
        variant45.setQuestion(question15);
        variant45.setName("трудно оценить по рыночным данным");
        variantService.save(variant45);
        Question question16 = new Question();
        question16.setTestExemp(testExemp777);
        question16.setMaxCount(1);
        question16.setName("Предпочтения, для которых существует согласованная с ними функция V называют:");
        questionService.save(question16);
        Variant variant46 = new Variant();
        variant46.setQuestion(question16);
        variant46.setName("сохраняющими предпочтения;");
        variantService.save(variant46);
        Variant variant47 = new Variant();
        variant47.setQuestion(question16);
        variant47.setName(" согласованными;");
        variant47.setCorrect(true);
        variantService.save(variant47);
        Variant variant48 = new Variant();
        variant48.setQuestion(question16);
        variant48.setName("исчислимыми.");
        variantService.save(variant48);
        Question question17 = new Question();
        question17.setTestExemp(testExemp777);
        question17.setMaxCount(1);
        question17.setName("Кривые безразличия, это");
        questionService.save(question17);
        Variant variant49 = new Variant();
        variant49.setQuestion(question17);
        variant49.setName("множества векторов безразличных между собой, т.е. не принадлежащих одному классу безразличия;");
        variantService.save(variant49);
        Variant variant50 = new Variant();
        variant50.setQuestion(question17);
        variant50.setName(" множества альтернатив (векторов благ), безразличных между собой, т.е. принадлежащих одному классу безразличия;");
        variant50.setCorrect(true);
        variantService.save(variant50);
        Variant variant51 = new Variant();
        variant51.setQuestion(question17);
        variant51.setName("под множества альтернатив, различных между собой, и принадлежащих разным классам безразличия");
        variantService.save(variant51);
        Question question18 = new Question();
        question18.setTestExemp(testExemp777);
        question18.setMaxCount(1);
        question18.setName("Вогнутость функции полезности и выражает принцип уменьшения маргинальной полезности благ. Он заключается в том, что");
        questionService.save(question18);
        Variant variant52 = new Variant();
        variant52.setQuestion(question18);
        variant52.setName("одинаковое приращение количества одного блага (при постоянстве количеств прочих) дает тем большее приращение полезности, чем большим количеством этого блага уже обладает экономический агент.:");
        variantService.save(variant52);
        Variant variant53 = new Variant();
        variant53.setQuestion(question18);
        variant53.setName("одинаковое приращение количества одного блага (при постоянстве количеств прочих) дает тем большее приращение полезности, чем меньшим количеством этого блага уже обладает экономический агент.:");
        variantService.save(variant53);
        Variant variant54 = new Variant();
        variant54.setQuestion(question18);
        variant54.setName(" одинаковое приращение количества одного блага (при постоянстве количеств прочих) дает тем меньшее приращение полезности, чем большим количеством этого блага уже обладает экономический агент.");
        variant54.setCorrect(true);
        variantService.save(variant54);
        Question question19 = new Question();
        question19.setTestExemp(testExemp777);
        question19.setMaxCount(1);
        question19.setName("Задача выбора в условиях риска это:");
        questionService.save(question19);
        Variant variant55 = new Variant();
        variant55.setQuestion(question19);
        variant55.setName("задача выбора из альтернатив в условиях неопределённости;");
        variantService.save(variant55);
        Variant variant56 = new Variant();
        variant56.setQuestion(question19);
        variant56.setName("задача выбора из альтернатив, представленных риск - факторами;");
        variantService.save(variant56);
        Variant variant57 = new Variant();
        variant57.setQuestion(question19);
        variant57.setName(" задача выбора из альтернатив, представленных вероятностными распределениями");
        variant57.setCorrect(true);
        variantService.save(variant57);
        Question question20 = new Question();
        question20.setTestExemp(testExemp777);
        question20.setMaxCount(1);
        question20.setName("Функция распределения F(x) доминирует функцию распределения G(x) в смысле стохастического доминирования первого порядка, если:");
        questionService.save(question20);
        Variant variant58 = new Variant();
        variant58.setQuestion(question20);
        variant58.setName("для любого х: F(x) ≥ G(x).:");
        variantService.save(variant58);
        Variant variant59 = new Variant();
        variant59.setQuestion(question20);
        variant59.setName("для любого х: F(x) ≠ G(x).:");
        variantService.save(variant59);
        Variant variant60 = new Variant();
        variant60.setQuestion(question20);
        variant60.setName(" для любого х: F(x) ≤ G(x).");
        variant60.setCorrect(true);
        variantService.save(variant60);
        Question question21 = new Question();
        question21.setTestExemp(testExemp777);
        question21.setMaxCount(1);
        question21.setName("Функция FA имеет больший разброс,");
        questionService.save(question21);
        Variant variant61 = new Variant();
        variant61.setQuestion(question21);
        variant61.setName("давая 'менее рисковое' распределение,");
        variantService.save(variant61);
        Variant variant62 = new Variant();
        variant62.setQuestion(question21);
        variant62.setName("давая 'одинаково рисковое' распределение,");
        variantService.save(variant62);
        Variant variant63 = new Variant();
        variant63.setQuestion(question21);
        variant63.setName(" давая 'более рисковое' распределение,");
        variant63.setCorrect(true);
        variantService.save(variant63);
        Question question22 = new Question();
        question22.setTestExemp(testExemp777);
        question22.setMaxCount(1);
        question22.setName("При каких распределениях большая дисперсия может гарантировать наличие второго стохастического доминирования:");
        questionService.save(question22);
        Variant variant64 = new Variant();
        variant64.setQuestion(question22);
        variant64.setName("показательном;");
        variantService.save(variant64);
        Variant variant65 = new Variant();
        variant65.setQuestion(question22);
        variant65.setName(" нормальном;");
        variant65.setCorrect(true);
        variantService.save(variant65);
        Variant variant66 = new Variant();
        variant66.setQuestion(question22);
        variant66.setName("степенном.");
        variantService.save(variant66);
        Question question23 = new Question();
        question23.setTestExemp(testExemp777);
        question23.setMaxCount(1);
        question23.setName("Согласно классической теории вероятностей, понятие вероятности тесно связано с понятием статистического эксперимента:");
        questionService.save(question23);
        Variant variant67 = new Variant();
        variant67.setQuestion(question23);
        variant67.setName("серии зависимых повторяемых испытаний;");
        variantService.save(variant67);
        Variant variant68 = new Variant();
        variant68.setQuestion(question23);
        variant68.setName("серии зависимых не повторяемых экспериментов;");
        variantService.save(variant68);
        Variant variant69 = new Variant();
        variant69.setQuestion(question23);
        variant69.setName(" серии независимых повторяемых испытаний.");
        variant69.setCorrect(true);
        variantService.save(variant69);
        Question question24 = new Question();
        question24.setTestExemp(testExemp777);
        question24.setMaxCount(1);
        question24.setName("Субъективная вероятность — это:");
        questionService.save(question24);
        Variant variant70 = new Variant();
        variant70.setQuestion(question24);
        variant70.setName("оценка субъектом невозможности какого-либо события.;");
        variantService.save(variant70);
        Variant variant71 = new Variant();
        variant71.setQuestion(question24);
        variant71.setName(" оценка субъектом степени возможности какого-либо события.;");
        variant71.setCorrect(true);
        variantService.save(variant71);
        Variant variant72 = new Variant();
        variant72.setQuestion(question24);
        variant72.setName("вероятность субъекта распознать какие-либо события.");
        variantService.save(variant72);
        Question question25 = new Question();
        question25.setTestExemp(testExemp777);
        question25.setMaxCount(1);
        question25.setName("Физические (статистические) вероятности понимаются как");
        questionService.save(question25);
        Variant variant73 = new Variant();
        variant73.setQuestion(question25);
        variant73.setName("статистические вероятности событий в физике;");
        variantService.save(variant73);
        Variant variant74 = new Variant();
        variant74.setQuestion(question25);
        variant74.setName("не реальные вероятности физических событий;");
        variantService.save(variant74);
        Variant variant75 = new Variant();
        variant75.setQuestion(question25);
        variant75.setName(" реальные вероятности событий.");
        variant75.setCorrect(true);
        variantService.save(variant75);
        Question question26 = new Question();
        question26.setTestExemp(testExemp777);
        question26.setMaxCount(1);
        question26.setName("Критерии выбора решений при неопределенности V(f) основываются на результатах решения f в случае реализации различных сценариев, f(s1),..., f(si),..., и на представлениях о значимости сценариев, выражаемых некоторыми весами πi = π(si).");
        questionService.save(question26);
        Variant variant76 = new Variant();
        variant76.setQuestion(question26);
        variant76.setName("Модель выбора в условиях неопределённости является частным случаем модели выбора в условиях рискRESP А.");
        variantService.save(variant76);
        Variant variant77 = new Variant();
        variant77.setQuestion(question26);
        variant77.setName(" Модель выбора в условиях риска является частным случаем этой модели.");
        variant77.setCorrect(true);
        variantService.save(variant77);
        Variant variant78 = new Variant();
        variant78.setQuestion(question26);
        variant78.setName("Модель выбора в условиях риска является обобщением этой модели;");
        variantService.save(variant78);
        Question question27 = new Question();
        question27.setTestExemp(testExemp777);
        question27.setMaxCount(1);
        question27.setName("Неопределенность может описываться различным образом. Что имеет место?");
        questionService.save(question27);
        Variant variant79 = new Variant();
        variant79.setQuestion(question27);
        variant79.setName("Во многих случаях способ описания неопределенности не зависит от решаемой задачи.");
        variantService.save(variant79);
        Variant variant80 = new Variant();
        variant80.setQuestion(question27);
        variant80.setName("Выбираемый способ учета неопределенности в процессе принятия решений не должен соответствовать имеющейся информации:");
        variantService.save(variant80);
        Variant variant81 = new Variant();
        variant81.setQuestion(question27);
        variant81.setName(" Во многих случаях способ описания неопределенности зависит от решаемой задачи. Выбираемый способ учета неопределенности в процессе принятия решений должент соответствовать имеющейся информации");
        variant81.setCorrect(true);
        variantService.save(variant81);
        Question question28 = new Question();
        question28.setTestExemp(testExemp777);
        question28.setMaxCount(1);
        question28.setName("Принцип сравнения по среднему и дисперсии выражает.:");
        questionService.save(question28);
        Variant variant82 = new Variant();
        variant82.setQuestion(question28);
        variant82.setName("предпочтительность альтернатив с меньшими значениями ('чем меньше, тем лучше') и меньшим разбросом ('неприятие риска', 'нелюбовь к риску');");
        variantService.save(variant82);
        Variant variant83 = new Variant();
        variant83.setQuestion(question28);
        variant83.setName(" предпочтительность альтернатив с большими значениями ('чем больше, тем лучше') и меньшим разбросом ('неприятие риска', 'нелюбовь к риску');");
        variant83.setCorrect(true);
        variantService.save(variant83);
        Variant variant84 = new Variant();
        variant84.setQuestion(question28);
        variant84.setName("предпочтительность альтернатив с большими значениями ('чем больше, тем лучше') и большими разбросом ('приятие риска', 'любовь к риску')");
        variantService.save(variant84);
        Question question29 = new Question();
        question29.setTestExemp(testExemp777);
        question29.setMaxCount(1);
        question29.setName("Говорят, что портфель А доминирует портфель В, если выполнено хотя бы одно из двух соотношений между парами (mА, σА) и (mB, σB):");
        questionService.save(question29);
        Variant variant85 = new Variant();
        variant85.setQuestion(question29);
        variant85.setName(" (mA ≥ mB, σA< σВ) или (mA > mB, σA ≤ σB);");
        variant85.setCorrect(true);
        variantService.save(variant85);
        Variant variant86 = new Variant();
        variant86.setQuestion(question29);
        variant86.setName("(mA ≥ mB, σA> σВ) или (mA > mB, σA ≥ σB);");
        variantService.save(variant86);
        Variant variant87 = new Variant();
        variant87.setQuestion(question29);
        variant87.setName("(mA ≤ mB, σA< σВ) или (mA > mB, σA ≤ σB).");
        variantService.save(variant87);
        Question question30 = new Question();
        question30.setTestExemp(testExemp777);
        question30.setMaxCount(1);
        question30.setName("В случае нормального распределения дисперсия однозначно 'отвечает':");
        questionService.save(question30);
        Variant variant88 = new Variant();
        variant88.setQuestion(question30);
        variant88.setName("за первое и второе стохастическое доминирование;");
        variantService.save(variant88);
        Variant variant89 = new Variant();
        variant89.setQuestion(question30);
        variant89.setName("за первое стохастическое доминирование;");
        variantService.save(variant89);
        Variant variant90 = new Variant();
        variant90.setQuestion(question30);
        variant90.setName(" за второе стохастическое доминирование.");
        variant90.setCorrect(true);
        variantService.save(variant90);
        Question question31 = new Question();
        question31.setTestExemp(testExemp777);
        question31.setMaxCount(1);
        question31.setName("Говорят выполнено условие на предпочтения М1: Если FA доминирует FB в смысле 1-го стохастического доминирования, то А предпочтительней B. В этих условиях");
        questionService.save(question31);
        Variant variant91 = new Variant();
        variant91.setQuestion(question31);
        variant91.setName(" Никакое отношение предпочтения, порожденное функцией V(A), зависящей только от математического ожидания и дисперсии распределения, V(A) = V(mA,σA), возрастающей по первому аргументу и убывающей по второму, не может удовлетворять (М1,) на множестве альтернатив с произвольными распределениями.");
        variant91.setCorrect(true);
        variantService.save(variant91);
        Variant variant92 = new Variant();
        variant92.setQuestion(question31);
        variant92.setName("Только доминируемое отношение предпочтения, порожденное функцией V(A), зависящей только от математического ожидания и дисперсии распределения, V(A) = V(mA,σA), возрастающей по первому аргументу и убывающей по второму, не может удовлетворять (М1,) на множестве альтернатив с произвольными распределениями.");
        variantService.save(variant92);
        Variant variant93 = new Variant();
        variant93.setQuestion(question31);
        variant93.setName("Любое транзитивное отношение предпочтения, порожденное функцией V(A), зависящей только от математического ожидания и дисперсии распределения, V(A) = V(mA,σA), возрастающей по первому аргументу и убывающей по второму, не может удовлетворять (М1,) на множестве альтернатив с произвольными распределениями.");
        variantService.save(variant93);
        Question question32 = new Question();
        question32.setTestExemp(testExemp777);
        question32.setMaxCount(1);
        question32.setName("Какое из суждений верно :");
        questionService.save(question32);
        Variant variant94 = new Variant();
        variant94.setQuestion(question32);
        variant94.setName("идея метода VaR — построить нижнюю оценку капитала, который может быть потерян в результате благоприятного стечения обстоятельстRESP В. Другими словами, это капитал, который теряется в 'наихудшем' случае.;");
        variantService.save(variant94);
        Variant variant95 = new Variant();
        variant95.setQuestion(question32);
        variant95.setName(" идея метода VaR — построить верхнюю оценку капитала, который может быть потерян в результате неблагоприятного стечения обстоятельстRESP В. Другими словами, это капитал, который теряется в 'наихудшем' случае.;");
        variant95.setCorrect(true);
        variantService.save(variant95);
        Variant variant96 = new Variant();
        variant96.setQuestion(question32);
        variant96.setName("идея метода VaR — построить верхнюю оценку капитала, который может быть потерян в результате благоприятного стечения обстоятельстRESP В. Другими словами, это капитал, который теряется в 'наилучшем' случае.");
        variantService.save(variant96);
        Question question33 = new Question();
        question33.setTestExemp(testExemp777);
        question33.setMaxCount(1);
        question33.setName("Подход VaR приводит к квантильным оценкам, поэтому:");
        questionService.save(question33);
        Variant variant97 = new Variant();
        variant97.setQuestion(question33);
        variant97.setName("такая мера весьма надёжна т.к. основывается на функции распределения;");
        variantService.save(variant97);
        Variant variant98 = new Variant();
        variant98.setQuestion(question33);
        variant98.setName(" такая мера не надёжна, т.к. основывается на одном значении функции распределения;");
        variant98.setCorrect(true);
        variantService.save(variant98);
        Variant variant99 = new Variant();
        variant99.setQuestion(question33);
        variant99.setName("такая мера весьма надёжна т.к. основывается на стоимостной и вероятностной оценке.");
        variantService.save(variant99);
        Question question34 = new Question();
        question34.setTestExemp(testExemp777);
        question34.setMaxCount(1);
        question34.setName("В методе параметрический VaR оцениваются среднее и дисперсия убытка, затем VaR, подразумевающий распределение убытка");
        questionService.save(question34);
        Variant variant100 = new Variant();
        variant100.setQuestion(question34);
        variant100.setName("не большим;");
        variantService.save(variant100);
        Variant variant101 = new Variant();
        variant101.setQuestion(question34);
        variant101.setName("равномерным;");
        variantService.save(variant101);
        Variant variant102 = new Variant();
        variant102.setQuestion(question34);
        variant102.setName(" нормальным.");
        variant102.setCorrect(true);
        variantService.save(variant102);
        Question question35 = new Question();
        question35.setTestExemp(testExemp777);
        question35.setMaxCount(1);
        question35.setName("Исторический VaR предполагает в качестве распределения убытка (дохода) фактически: А берется просто показательное распределение, построенное по данным за некоторый периоRESP Д.;");
        questionService.save(question35);
        Variant variant103 = new Variant();
        variant103.setQuestion(question35);
        variant103.setName("берется нормальное распределение, построенное по данным за некоторый период;");
        variantService.save(variant103);
        Variant variant104 = new Variant();
        variant104.setQuestion(question35);
        variant104.setName(" брать просто выборочное распределение, построенное по данным за некоторый период;");
        variant104.setCorrect(true);
        variantService.save(variant104);
        Question question36 = new Question();
        question36.setTestExemp(testExemp777);
        question36.setMaxCount(1);
        question36.setName("Модельный VaR рассчитывается на основе статистических данных. Для этого:");
        questionService.save(question36);
        Variant variant105 = new Variant();
        variant105.setQuestion(question36);
        variant105.setName("строится гистограмма убытков:");
        variantService.save(variant105);
        Variant variant106 = new Variant();
        variant106.setQuestion(question36);
        variant106.setName("строится модель оценки прибыли:");
        variantService.save(variant106);
        Variant variant107 = new Variant();
        variant107.setQuestion(question36);
        variant107.setName(" строится та или иная стохастическая модель убыткRESP А.");
        variant107.setCorrect(true);
        variantService.save(variant107);
        Question question37 = new Question();
        question37.setTestExemp(testExemp777);
        question37.setMaxCount(1);
        question37.setName("Общим в действиях по диверсификации риска является:");
        questionService.save(question37);
        Variant variant108 = new Variant();
        variant108.setQuestion(question37);
        variant108.setName("определение уникальных по производительности единиц.");
        variantService.save(variant108);
        Variant variant109 = new Variant();
        variant109.setQuestion(question37);
        variant109.setName(" выделение связанных по технологии (зависимо действующих) единиц;");
        variant109.setCorrect(true);
        variantService.save(variant109);
        Variant variant110 = new Variant();
        variant110.setQuestion(question37);
        variant110.setName("выделение самостоятельных (независимо действующих) единиц.");
        variantService.save(variant110);
        Question question38 = new Question();
        question38.setTestExemp(testExemp777);
        question38.setMaxCount(1);
        question38.setName("При объединении рисков ресурсы должны");
        questionService.save(question38);
        Variant variant111 = new Variant();
        variant111.setQuestion(question38);
        variant111.setName("высвобождаться;");
        variantService.save(variant111);
        Variant variant112 = new Variant();
        variant112.setQuestion(question38);
        variant112.setName("увеличиваться;");
        variantService.save(variant112);
        Variant variant113 = new Variant();
        variant113.setQuestion(question38);
        variant113.setName(" снижаться");
        variant113.setCorrect(true);
        variantService.save(variant113);
        Question question39 = new Question();
        question39.setTestExemp(testExemp777);
        question39.setMaxCount(1);
        question39.setName("Аддитивность критерия риска обосновывает возможность:");
        questionService.save(question39);
        Variant variant114 = new Variant();
        variant114.setQuestion(question39);
        variant114.setName("централизованного принятия решений.");
        variantService.save(variant114);
        Variant variant115 = new Variant();
        variant115.setQuestion(question39);
        variant115.setName("коллективного принятия решений.");
        variantService.save(variant115);
        Variant variant116 = new Variant();
        variant116.setQuestion(question39);
        variant116.setName(" децентрализованного принятия решений.");
        variant116.setCorrect(true);
        variantService.save(variant116);
        Question question40 = new Question();
        question40.setTestExemp(testExemp777);
        question40.setMaxCount(1);
        question40.setName("Если V имеет вид ожидаемой полезности U(x) =∑i u(xi)pi, то для выполнения условия М1 – первого стохастического доминирования");
        questionService.save(question40);
        Variant variant117 = new Variant();
        variant117.setQuestion(question40);
        variant117.setName("достаточно не убывания функции полезности денег u(∙);");
        variantService.save(variant117);
        Variant variant118 = new Variant();
        variant118.setQuestion(question40);
        variant118.setName("необходимо и достаточно убывания функции полезности денег u(∙);");
        variantService.save(variant118);
        Variant variant119 = new Variant();
        variant119.setQuestion(question40);
        variant119.setName(" необходимо и достаточно возрастания функции полезности денег u(∙).");
        variant119.setCorrect(true);
        variantService.save(variant119);
        Question question41 = new Question();
        question41.setTestExemp(testExemp777);
        question41.setMaxCount(1);
        question41.setName("Если V имеет вид ожидаемой полезности U(x) =∑i u(xi)pi, то для выполнения условия М2 – второго стохастического доминирования:");
        questionService.save(question41);
        Variant variant120 = new Variant();
        variant120.setQuestion(question41);
        variant120.setName(" необходимо и достаточно возрастания и вогнутости u(∙);");
        variant120.setCorrect(true);
        variantService.save(variant120);
        Variant variant121 = new Variant();
        variant121.setQuestion(question41);
        variant121.setName("необходимо и достаточно убывания и вогнутости u(∙);");
        variantService.save(variant121);
        Variant variant122 = new Variant();
        variant122.setQuestion(question41);
        variant122.setName("необходимо и достаточно вогнутости u(∙)");
        variantService.save(variant122);
        Question question42 = new Question();
        question42.setTestExemp(testExemp777);
        question42.setMaxCount(1);
        question42.setName("В случае риск - нейтральности предпочтений функция полезности денег должна иметь");
        questionService.save(question42);
        Variant variant123 = new Variant();
        variant123.setQuestion(question42);
        variant123.setName("наиболее простой вид;");
        variantService.save(variant123);
        Variant variant124 = new Variant();
        variant124.setQuestion(question42);
        variant124.setName("нелинейный вид;");
        variantService.save(variant124);
        Variant variant125 = new Variant();
        variant125.setQuestion(question42);
        variant125.setName(" линейный вид: и(х) = ах+Ь..");
        variant125.setCorrect(true);
        variantService.save(variant125);
        Question question43 = new Question();
        question43.setTestExemp(testExemp777);
        question43.setMaxCount(1);
        question43.setName("«Эффект отражения» – это по мере того, как речь заходит о все больших потерях, люди становятся все более:");
        questionService.save(question43);
        Variant variant126 = new Variant();
        variant126.setQuestion(question43);
        variant126.setName("щепетильнее к потере одного рубля;");
        variantService.save(variant126);
        Variant variant127 = new Variant();
        variant127.setQuestion(question43);
        variant127.setName("безразличны вообще к потерям;");
        variantService.save(variant127);
        Variant variant128 = new Variant();
        variant128.setQuestion(question43);
        variant128.setName(" безразличны к потере ещё одного рубля, т.е. происходит насыщение;");
        variant128.setCorrect(true);
        variantService.save(variant128);
        Question question44 = new Question();
        question44.setTestExemp(testExemp777);
        question44.setMaxCount(1);
        question44.setName(". 'Неприятие потерь' — эффект, состоящий в том, что люди более чувствительны:");
        questionService.save(question44);
        Variant variant129 = new Variant();
        variant129.setQuestion(question44);
        variant129.setName("к приобретениям;");
        variantService.save(variant129);
        Variant variant130 = new Variant();
        variant130.setQuestion(question44);
        variant130.setName(" к потерям, чем к приобретениям;");
        variant130.setCorrect(true);
        variantService.save(variant130);
        Variant variant131 = new Variant();
        variant131.setQuestion(question44);
        variant131.setName("к отсутствию приобретений.");
        variantService.save(variant131);
        Question question45 = new Question();
        question45.setTestExemp(testExemp777);
        question45.setMaxCount(1);
        question45.setName("Экономическое поведение людей может сильно отличаться от предсказываемого теорией ожидаемой полезности:");
        questionService.save(question45);
        Variant variant132 = new Variant();
        variant132.setQuestion(question45);
        variant132.setName("это подтверждается как данными теории, так и примерами из виртуальной жизни;");
        variantService.save(variant132);
        Variant variant133 = new Variant();
        variant133.setQuestion(question45);
        variant133.setName("это подтверждается данными вычислительных экспериментов и примерами из жизни подопытных кроликов;");
        variantService.save(variant133);
        Variant variant134 = new Variant();
        variant134.setQuestion(question45);
        variant134.setName(" это подтверждается как данными лабораторных экспериментов, так и примерами из реальной жизни");
        variant134.setCorrect(true);
        variantService.save(variant134);
        Question question46 = new Question();
        question46.setTestExemp(testExemp777);
        question46.setMaxCount(1);
        question46.setName("Парадокс Аллэ демонстрирует, что реальный агент, ведущий себя рационально, предпочитает:");
        questionService.save(question46);
        Variant variant135 = new Variant();
        variant135.setQuestion(question46);
        variant135.setName("поведение получения максимальной ожидаемой полезности, а не поведение достижения абсолютной надежности;");
        variantService.save(variant135);
        Variant variant136 = new Variant();
        variant136.setQuestion(question46);
        variant136.setName("поведение получения средней ожидаемой полезности при достижении абсолютной надежности;");
        variantService.save(variant136);
        Variant variant137 = new Variant();
        variant137.setQuestion(question46);
        variant137.setName(" не поведение получения максимальной ожидаемой полезности, а поведение достижения абсолютной надежности.");
        variant137.setCorrect(true);
        variantService.save(variant137);
        Question question47 = new Question();
        question47.setTestExemp(testExemp777);
        question47.setMaxCount(1);
        question47.setName("В отличие от теории ожидаемой полезности более прямым объяснением предлагаемое некоторыми современными теориями неприятие риска определяется:");
        questionService.save(question47);
        Variant variant138 = new Variant();
        variant138.setQuestion(question47);
        variant138.setName("не только отношением к деньгам, но и отношением к их отсутствию;");
        variantService.save(variant138);
        Variant variant139 = new Variant();
        variant139.setQuestion(question47);
        variant139.setName("не только отношением к деньгам, но и отношением к ещё большим деньгам;");
        variantService.save(variant139);
        Variant variant140 = new Variant();
        variant140.setQuestion(question47);
        variant140.setName(" не только отношением к деньгам, но и отношением к случайности, т.е. к вероятностям.");
        variant140.setCorrect(true);
        variantService.save(variant140);


    }

    public void fill999(TestExemp testExemp999){
        Question question1 = new Question();
        question1.setTestExemp(testExemp999);
        question1.setMaxCount(1);
        question1.setName("Риск – это:");
        questionService.save(question1);
        Variant variant1 = new Variant();
        variant1.setQuestion(question1);
        variant1.setName("неблагоприятное событие, влекущее за собой убыток;");
        variantService.save(variant1);
        Variant variant2 = new Variant();
        variant2.setQuestion(question1);
        variant2.setName(" все предпосылки, могущие негативно повлиять на достижение стратегиче-ских целей в течение строго определенного временного промежутка;");
        variant2.setCorrect(true);
        variantService.save(variant2);
        Variant variant3 = new Variant();
        variant3.setQuestion(question1);
        variant3.setName("вероятность наступления стихийных бедствий либо технических аварий;");
        variantService.save(variant3);
        Variant variant4 = new Variant();
        variant4.setQuestion(question1);
        variant4.setName("вероятность провала программы продаж;");
        variantService.save(variant4);
        Variant variant5 = new Variant();
        variant5.setQuestion(question1);
        variant5.setName(" вероятность успеха в бизнесе.");
        variantService.save(variant5);
        Question question2 = new Question();
        question2.setTestExemp(testExemp999);
        question2.setMaxCount(1);
        question2.setName("Управление риском – это:");
        questionService.save(question2);
        Variant variant6 = new Variant();
        variant6.setQuestion(question2);
        variant6.setName("отказ от рискованного проекта;");
        variantService.save(variant6);
        Variant variant7 = new Variant();
        variant7.setQuestion(question2);
        variant7.setName("комплекс мер, направленных на снижение вероятности реализации риска;");
        variantService.save(variant7);
        Variant variant8 = new Variant();
        variant8.setQuestion(question2);
        variant8.setName(" комплекс мер, направленных на компенсацию, снижение, перенесение, принятие риска или уход от него;");
        variant8.setCorrect(true);
        variantService.save(variant8);
        Variant variant9 = new Variant();
        variant9.setQuestion(question2);
        variant9.setName("комплекс мероприятий, направленных на подготовку к реализации риска.");
        variantService.save(variant9);
        Question question3 = new Question();
        question3.setTestExemp(testExemp999);
        question3.setMaxCount(1);
        question3.setName("Реализация риск-менеджмента на современных предприятиях включает в себя:");
        questionService.save(question3);
        Variant variant10 = new Variant();
        variant10.setQuestion(question3);
        variant10.setName(" выявление последствий деятельности экономических субъектов в ситуации риска;");
        variant10.setCorrect(true);
        variantService.save(variant10);
        Variant variant11 = new Variant();
        variant11.setQuestion(question3);
        variant11.setName(" прогнозирование этой деятельности для снижения уровня риска;");
        variant11.setCorrect(true);
        variantService.save(variant11);
        Variant variant12 = new Variant();
        variant12.setQuestion(question3);
        variant12.setName(" умение реагировать на возможные отрицательные последствия этой дея-тельности;");
        variant12.setCorrect(true);
        variantService.save(variant12);
        Variant variant13 = new Variant();
        variant13.setQuestion(question3);
        variant13.setName(" умение ликвидировать такие последствия;");
        variant13.setCorrect(true);
        variantService.save(variant13);
        Variant variant14 = new Variant();
        variant14.setQuestion(question3);
        variant14.setName("  разработка и осуществление мер, при помощи которых могут быть нейтрализованы или компенсированы вероятные негативные результаты предпринимаемых действий.");
        variant14.setCorrect(true);
        variantService.save(variant14);
        Question question4 = new Question();
        question4.setTestExemp(testExemp999);
        question4.setMaxCount(1);
        question4.setName("Содержательная сторона риск-менеджмента включает в себя:");
        questionService.save(question4);
        Variant variant15 = new Variant();
        variant15.setQuestion(question4);
        variant15.setName("планирование деятельности по реализации рискованного проекта;");
        variantService.save(variant15);
        Variant variant16 = new Variant();
        variant16.setQuestion(question4);
        variant16.setName(" сравнение вероятностей и характеристик риска, полученных в результате оценки и анализа риска;");
        variant16.setCorrect(true);
        variantService.save(variant16);
        Variant variant17 = new Variant();
        variant17.setQuestion(question4);
        variant17.setName("выбор мер по минимизации или устранению последствий риска;");
        variantService.save(variant17);
        Variant variant18 = new Variant();
        variant18.setQuestion(question4);
        variant18.setName("организация службы управления рисками на предприятии.");
        variantService.save(variant18);
        Question question5 = new Question();
        question5.setTestExemp(testExemp999);
        question5.setMaxCount(1);
        question5.setName("Что из перечисленного не является элементом системы риск-менеджмента?");
        questionService.save(question5);
        Variant variant19 = new Variant();
        variant19.setQuestion(question5);
        variant19.setName("выявление расхождений в альтернативах риска;");
        variantService.save(variant19);
        Variant variant20 = new Variant();
        variant20.setQuestion(question5);
        variant20.setName("разработка планов, позволяющих действовать оптимальным образом в ситуации риска;");
        variantService.save(variant20);
        Variant variant21 = new Variant();
        variant21.setQuestion(question5);
        variant21.setName("разработка конкретных мероприятий, направленных на минимизацию или уст ранение негативных последствий");
        variantService.save(variant21);
        Variant variant22 = new Variant();
        variant22.setQuestion(question5);
        variant22.setName("учет психологического восприятия рискованных проектов;");
        variantService.save(variant22);
        Variant variant23 = new Variant();
        variant23.setQuestion(question5);
        variant23.setName(" ни один из вариантов не является элементом системы риск-менеджмента;");
        variantService.save(variant23);
        Variant variant24 = new Variant();
        variant24.setQuestion(question5);
        variant24.setName(" все перечисленное является элементами системы риск-менеджмента.");
        variant24.setCorrect(true);
        variantService.save(variant24);
        Question question6 = new Question();
        question6.setTestExemp(testExemp999);
        question6.setMaxCount(1);
        question6.setName("Какие категории задач риск-менеджмента можно выделить?");
        questionService.save(question6);
        Variant variant25 = new Variant();
        variant25.setQuestion(question6);
        variant25.setName(" применение риск-менеджмента;");
        variant25.setCorrect(true);
        variantService.save(variant25);
        Variant variant26 = new Variant();
        variant26.setQuestion(question6);
        variant26.setName("применение методов риск-менеджмента;");
        variantService.save(variant26);
        Variant variant27 = new Variant();
        variant27.setQuestion(question6);
        variant27.setName(" управление рисками по их типам;");
        variant27.setCorrect(true);
        variantService.save(variant27);
        Variant variant28 = new Variant();
        variant28.setQuestion(question6);
        variant28.setName("точность оценок рисков;");
        variantService.save(variant28);
        Variant variant29 = new Variant();
        variant29.setQuestion(question6);
        variant29.setName(" точность прогнозов рисков.");
        variantService.save(variant29);
        Question question7 = new Question();
        question7.setTestExemp(testExemp999);
        question7.setMaxCount(1);
        question7.setName("VAR – это:");
        questionService.save(question7);
        Variant variant30 = new Variant();
        variant30.setQuestion(question7);
        variant30.setName(" парадигма стоимости риска (Value-at-Risk);");
        variant30.setCorrect(true);
        variantService.save(variant30);
        Variant variant31 = new Variant();
        variant31.setQuestion(question7);
        variant31.setName("показатель объемов потерь прибыли (Volume at Reduce);");
        variantService.save(variant31);
        Variant variant32 = new Variant();
        variant32.setQuestion(question7);
        variant32.setName("степень сопротивления персонала рискованным проектам (Volume at Resistance);");
        variantService.save(variant32);
        Variant variant33 = new Variant();
        variant33.setQuestion(question7);
        variant33.setName("объем риска (Volume of Accepted Risk).");
        variantService.save(variant33);
        Question question8 = new Question();
        question8.setTestExemp(testExemp999);
        question8.setMaxCount(1);
        question8.setName("Главной функцией риск-менеджмента является:");
        questionService.save(question8);
        Variant variant34 = new Variant();
        variant34.setQuestion(question8);
        variant34.setName("создание чуткой системы управления рисками;");
        variantService.save(variant34);
        Variant variant35 = new Variant();
        variant35.setQuestion(question8);
        variant35.setName("оценка риска по каждому проекту в компании;");
        variantService.save(variant35);
        Variant variant36 = new Variant();
        variant36.setQuestion(question8);
        variant36.setName(" оценка риска для компании в целом;");
        variant36.setCorrect(true);
        variantService.save(variant36);
        Variant variant37 = new Variant();
        variant37.setQuestion(question8);
        variant37.setName("предотвращение банкротства компании в результате наступления случайных событий.");
        variantService.save(variant37);
        Question question9 = new Question();
        question9.setTestExemp(testExemp999);
        question9.setMaxCount(1);
        question9.setName("Какие подходы выделяют при расчете VAR?");
        questionService.save(question9);
        Variant variant38 = new Variant();
        variant38.setQuestion(question9);
        variant38.setName(" эмпирический;");
        variant38.setCorrect(true);
        variantService.save(variant38);
        Variant variant39 = new Variant();
        variant39.setQuestion(question9);
        variant39.setName("логический;");
        variantService.save(variant39);
        Variant variant40 = new Variant();
        variant40.setQuestion(question9);
        variant40.setName("оценочный;");
        variantService.save(variant40);
        Variant variant41 = new Variant();
        variant41.setQuestion(question9);
        variant41.setName("ранжирование;");
        variantService.save(variant41);
        Variant variant42 = new Variant();
        variant42.setQuestion(question9);
        variant42.setName("  параметрический.");
        variant42.setCorrect(true);
        variantService.save(variant42);
        Question question10 = new Question();
        question10.setTestExemp(testExemp999);
        question10.setMaxCount(1);
        question10.setName("Что из перечисленного не является элементом расчета VAR для од-ного актива?");
        questionService.save(question10);
        Variant variant43 = new Variant();
        variant43.setQuestion(question10);
        variant43.setName("текущая стоимость актива;");
        variantService.save(variant43);
        Variant variant44 = new Variant();
        variant44.setQuestion(question10);
        variant44.setName("чувствительность стоимости к неблагоприятному изменению фактора рис-ка;");
        variantService.save(variant44);
        Variant variant45 = new Variant();
        variant45.setQuestion(question10);
        variant45.setName(" изменение стоимости в перспективе;");
        variant45.setCorrect(true);
        variantService.save(variant45);
        Variant variant46 = new Variant();
        variant46.setQuestion(question10);
        variant46.setName("возможное изменение фактора риска при данном доверительном уровне;");
        variantService.save(variant46);
        Variant variant47 = new Variant();
        variant47.setQuestion(question10);
        variant47.setName(" все вышеперечисленные ответы верны;");
        variantService.save(variant47);
        Variant variant48 = new Variant();
        variant48.setQuestion(question10);
        variant48.setName("все вышеперечисленные ответы не верны.");
        variantService.save(variant48);
        Question question11 = new Question();
        question11.setTestExemp(testExemp999);
        question11.setMaxCount(1);
        question11.setName("Волатильность – это:");
        questionService.save(question11);
        Variant variant49 = new Variant();
        variant49.setQuestion(question11);
        variant49.setName(" изменчивость рыночного спроса;");
        variant49.setCorrect(true);
        variantService.save(variant49);
        Variant variant50 = new Variant();
        variant50.setQuestion(question11);
        variant50.setName("постоянство рыночного спроса;");
        variantService.save(variant50);
        Variant variant51 = new Variant();
        variant51.setQuestion(question11);
        variant51.setName("изменчивость курсовых разниц и процентных ставок;");
        variantService.save(variant51);
        Variant variant52 = new Variant();
        variant52.setQuestion(question11);
        variant52.setName("постоянство курсовых разниц и процентных ставок.");
        variantService.save(variant52);
        Question question12 = new Question();
        question12.setTestExemp(testExemp999);
        question12.setMaxCount(1);
        question12.setName(" Суть риск-менеджмента состоит в:");
        questionService.save(question12);
        Variant variant53 = new Variant();
        variant53.setQuestion(question12);
        variant53.setName(" устранении риска;");
        variant53.setCorrect(true);
        variantService.save(variant53);
        Variant variant54 = new Variant();
        variant54.setQuestion(question12);
        variant54.setName("управлении риском;");
        variantService.save(variant54);
        Variant variant55 = new Variant();
        variant55.setQuestion(question12);
        variant55.setName("снижении риска;");
        variantService.save(variant55);
        Variant variant56 = new Variant();
        variant56.setQuestion(question12);
        variant56.setName("выборе риска.");
        variantService.save(variant56);
        Question question13 = new Question();
        question13.setTestExemp(testExemp999);
        question13.setMaxCount(1);
        question13.setName("Каковы функции объекта управления в риск-менеджменте?");
        questionService.save(question13);
        Variant variant57 = new Variant();
        variant57.setQuestion(question13);
        variant57.setName("организация разрешения риска;");
        variantService.save(variant57);
        Variant variant58 = new Variant();
        variant58.setQuestion(question13);
        variant58.setName("организация рисковых вложений капитала;");
        variantService.save(variant58);
        Variant variant59 = new Variant();
        variant59.setQuestion(question13);
        variant59.setName("организация работы по снижению величины риска;");
        variantService.save(variant59);
        Variant variant60 = new Variant();
        variant60.setQuestion(question13);
        variant60.setName("организация процесса страхования рисков;");
        variantService.save(variant60);
        Variant variant61 = new Variant();
        variant61.setQuestion(question13);
        variant61.setName(" организация экономических отношений и связей между субъектами хо-зяйственного процесса;");
        variantService.save(variant61);
        Variant variant62 = new Variant();
        variant62.setQuestion(question13);
        variant62.setName(" все перечисленное является функциями объекта управления;");
        variant62.setCorrect(true);
        variantService.save(variant62);
        Variant variant63 = new Variant();
        variant63.setQuestion(question13);
        variant63.setName("ничего из перечисленного не является функцией объекта управления.");
        variantService.save(variant63);
        Question question14 = new Question();
        question14.setTestExemp(testExemp999);
        question14.setMaxCount(1);
        question14.setName("Что из перечисленного не является функциями субъекта управле-ния в риск- менеджменте?");
        questionService.save(question14);
        Variant variant64 = new Variant();
        variant64.setQuestion(question14);
        variant64.setName("прогнозирование;");
        variantService.save(variant64);
        Variant variant65 = new Variant();
        variant65.setQuestion(question14);
        variant65.setName(" нормирование;");
        variant65.setCorrect(true);
        variantService.save(variant65);
        Variant variant66 = new Variant();
        variant66.setQuestion(question14);
        variant66.setName("организация;");
        variantService.save(variant66);
        Variant variant67 = new Variant();
        variant67.setQuestion(question14);
        variant67.setName("регулирование;");
        variantService.save(variant67);
        Variant variant68 = new Variant();
        variant68.setQuestion(question14);
        variant68.setName(" координация;");
        variantService.save(variant68);
        Variant variant69 = new Variant();
        variant69.setQuestion(question14);
        variant69.setName(" распределение;");
        variant69.setCorrect(true);
        variantService.save(variant69);
        Variant variant70 = new Variant();
        variant70.setQuestion(question14);
        variant70.setName("стимулирование;");
        variantService.save(variant70);
        Variant variant71 = new Variant();
        variant71.setQuestion(question14);
        variant71.setName("контроль.");
        variantService.save(variant71);
        Question question15 = new Question();
        question15.setTestExemp(testExemp999);
        question15.setMaxCount(1);
        question15.setName("Что из перечисленного является правилами риск-менеджмента?");
        questionService.save(question15);
        Variant variant72 = new Variant();
        variant72.setQuestion(question15);
        variant72.setName(" нельзя рисковать многим ради малого;");
        variant72.setCorrect(true);
        variantService.save(variant72);
        Variant variant73 = new Variant();
        variant73.setQuestion(question15);
        variant73.setName("риск – дело благородное;");
        variantService.save(variant73);
        Variant variant74 = new Variant();
        variant74.setQuestion(question15);
        variant74.setName("нельзя думать, что существует только одно решение, возможно, есть и другие;");
        variantService.save(variant74);
        Variant variant75 = new Variant();
        variant75.setQuestion(question15);
        variant75.setName(" при существовании нескольких вариантов, следует идти по пути мини-мально риска;");
        variant75.setCorrect(true);
        variantService.save(variant75);
        Variant variant76 = new Variant();
        variant76.setQuestion(question15);
        variant76.setName("  положительное решение принимается лишь при отсутствии сомнения.");
        variant76.setCorrect(true);
        variantService.save(variant76);
        Question question16 = new Question();
        question16.setTestExemp(testExemp999);
        question16.setMaxCount(1);
        question16.setName("Какие из перечисленных источников могут использоваться для ин-формационного обеспечения риск-менеджмента?");
        questionService.save(question16);
        Variant variant77 = new Variant();
        variant77.setQuestion(question16);
        variant77.setName(" контракты, договоры об имущественных сделках;");
        variant77.setCorrect(true);
        variantService.save(variant77);
        Variant variant78 = new Variant();
        variant78.setQuestion(question16);
        variant78.setName("имидж руководства организации;");
        variantService.save(variant78);
        Variant variant79 = new Variant();
        variant79.setQuestion(question16);
        variant79.setName(" кредитные договоры;");
        variant79.setCorrect(true);
        variantService.save(variant79);
        Variant variant80 = new Variant();
        variant80.setQuestion(question16);
        variant80.setName(" тенденции развития рынков;");
        variant80.setCorrect(true);
        variantService.save(variant80);
        Variant variant81 = new Variant();
        variant81.setQuestion(question16);
        variant81.setName("  бухгалтерская отчетность;");
        variant81.setCorrect(true);
        variantService.save(variant81);
        Variant variant82 = new Variant();
        variant82.setQuestion(question16);
        variant82.setName(" статистическая отчетность.");
        variant82.setCorrect(true);
        variantService.save(variant82);
        Question question17 = new Question();
        question17.setTestExemp(testExemp999);
        question17.setMaxCount(1);
        question17.setName("Какие риски могут принести дополнительную прибыль фирме?");
        questionService.save(question17);
        Variant variant83 = new Variant();
        variant83.setQuestion(question17);
        variant83.setName(" спекулятивные;");
        variant83.setCorrect(true);
        variantService.save(variant83);
        Variant variant84 = new Variant();
        variant84.setQuestion(question17);
        variant84.setName("чистые;");
        variantService.save(variant84);
        Variant variant85 = new Variant();
        variant85.setQuestion(question17);
        variant85.setName("ретроспективные;");
        variantService.save(variant85);
        Variant variant86 = new Variant();
        variant86.setQuestion(question17);
        variant86.setName("любые;");
        variantService.save(variant86);
        Variant variant87 = new Variant();
        variant87.setQuestion(question17);
        variant87.setName(" реализация риска в принципе не может принести дополнительную при-быль компании.");
        variantService.save(variant87);
        Question question18 = new Question();
        question18.setTestExemp(testExemp999);
        question18.setMaxCount(1);
        question18.setName("Подразделение рисков на спекулятивные и чистые основано на:");
        questionService.save(question18);
        Variant variant88 = new Variant();
        variant88.setQuestion(question18);
        variant88.setName("классификации субъектов риска;");
        variantService.save(variant88);
        Variant variant89 = new Variant();
        variant89.setQuestion(question18);
        variant89.setName("классификации объектов риска;");
        variantService.save(variant89);
        Variant variant90 = new Variant();
        variant90.setQuestion(question18);
        variant90.setName("характере оценки риска;");
        variantService.save(variant90);
        Variant variant91 = new Variant();
        variant91.setQuestion(question18);
        variant91.setName(" характере последствий риска.");
        variant91.setCorrect(true);
        variantService.save(variant91);
        Question question19 = new Question();
        question19.setTestExemp(testExemp999);
        question19.setMaxCount(1);
        question19.setName("По сфере возникновения выделяют следующие типы рисков:");
        questionService.save(question19);
        Variant variant92 = new Variant();
        variant92.setQuestion(question19);
        variant92.setName(" производственный риск;");
        variant92.setCorrect(true);
        variantService.save(variant92);
        Variant variant93 = new Variant();
        variant93.setQuestion(question19);
        variant93.setName("кадровый риск;");
        variantService.save(variant93);
        Variant variant94 = new Variant();
        variant94.setQuestion(question19);
        variant94.setName("информационный риск;");
        variantService.save(variant94);
        Variant variant95 = new Variant();
        variant95.setQuestion(question19);
        variant95.setName(" финансовый риск;");
        variant95.setCorrect(true);
        variantService.save(variant95);
        Variant variant96 = new Variant();
        variant96.setQuestion(question19);
        variant96.setName("  коммерческий риск.");
        variant96.setCorrect(true);
        variantService.save(variant96);
        Question question20 = new Question();
        question20.setTestExemp(testExemp999);
        question20.setMaxCount(1);
        question20.setName("Коммерческий риск – это риск, возникающий:");
        questionService.save(question20);
        Variant variant97 = new Variant();
        variant97.setQuestion(question20);
        variant97.setName("на коммерческих предприятиях;");
        variantService.save(variant97);
        Variant variant98 = new Variant();
        variant98.setQuestion(question20);
        variant98.setName("при заключении коммерческих сделок;");
        variantService.save(variant98);
        Variant variant99 = new Variant();
        variant99.setQuestion(question20);
        variant99.setName(" в процессе реализации товаров или услуг;");
        variant99.setCorrect(true);
        variantService.save(variant99);
        Variant variant100 = new Variant();
        variant100.setQuestion(question20);
        variant100.setName("в процессе производства товаров или услуг.");
        variantService.save(variant100);
        Question question21 = new Question();
        question21.setTestExemp(testExemp999);
        question21.setMaxCount(1);
        question21.setName("Относятся ли риски, связанные с транспортировкой товаров, к группе коммерческих рисков?");
        questionService.save(question21);
        Variant variant101 = new Variant();
        variant101.setQuestion(question21);
        variant101.setName(" да;");
        variant101.setCorrect(true);
        variantService.save(variant101);
        Variant variant102 = new Variant();
        variant102.setQuestion(question21);
        variant102.setName("нет;");
        variantService.save(variant102);
        Variant variant103 = new Variant();
        variant103.setQuestion(question21);
        variant103.setName("это зависит от характера транспортировки.");
        variantService.save(variant103);
        Question question22 = new Question();
        question22.setTestExemp(testExemp999);
        question22.setMaxCount(1);
        question22.setName("На какие виды подразделяются финансовые риски?");
        questionService.save(question22);
        Variant variant104 = new Variant();
        variant104.setQuestion(question22);
        variant104.setName(" валютные;");
        variant104.setCorrect(true);
        variantService.save(variant104);
        Variant variant105 = new Variant();
        variant105.setQuestion(question22);
        variant105.setName("денежные;");
        variantService.save(variant105);
        Variant variant106 = new Variant();
        variant106.setQuestion(question22);
        variant106.setName(" инвестиционные;");
        variant106.setCorrect(true);
        variantService.save(variant106);
        Variant variant107 = new Variant();
        variant107.setQuestion(question22);
        variant107.setName("проектные;");
        variantService.save(variant107);
        Variant variant108 = new Variant();
        variant108.setQuestion(question22);
        variant108.setName(" риски распределения доходности.");
        variantService.save(variant108);
        Question question23 = new Question();
        question23.setTestExemp(testExemp999);
        question23.setMaxCount(1);
        question23.setName("Валютный риск связан с:");
        questionService.save(question23);
        Variant variant109 = new Variant();
        variant109.setQuestion(question23);
        variant109.setName("покупкой и продажей валют;");
        variantService.save(variant109);
        Variant variant110 = new Variant();
        variant110.setQuestion(question23);
        variant110.setName(" любыми потерями, обусловленными изменением курса иностранной валю-ты;");
        variant110.setCorrect(true);
        variantService.save(variant110);
        Variant variant111 = new Variant();
        variant111.setQuestion(question23);
        variant111.setName("обменом одной иностранной валюты на другую;");
        variantService.save(variant111);
        Variant variant112 = new Variant();
        variant112.setQuestion(question23);
        variant112.setName("ошибками при расчете кросс-курсов.");
        variantService.save(variant112);
        Question question24 = new Question();
        question24.setTestExemp(testExemp999);
        question24.setMaxCount(1);
        question24.setName("Инфляционный риск – это:");
        questionService.save(question24);
        Variant variant113 = new Variant();
        variant113.setQuestion(question24);
        variant113.setName("риск увеличения темпов инфляции;");
        variantService.save(variant113);
        Variant variant114 = new Variant();
        variant114.setQuestion(question24);
        variant114.setName(" риск опережения роста доходов темпом их обесценивания;");
        variant114.setCorrect(true);
        variantService.save(variant114);
        Variant variant115 = new Variant();
        variant115.setQuestion(question24);
        variant115.setName("риск инфляционных ожиданий;");
        variantService.save(variant115);
        Variant variant116 = new Variant();
        variant116.setQuestion(question24);
        variant116.setName("риск возникновения разницы в темпах инфляции на разных рынках сбыта.");
        variantService.save(variant116);
        Question question25 = new Question();
        question25.setTestExemp(testExemp999);
        question25.setMaxCount(1);
        question25.setName("Системный риск – это:");
        questionService.save(question25);
        Variant variant117 = new Variant();
        variant117.setQuestion(question25);
        variant117.setName(" риск ухудшения конъюнктуры какого-либо рынка;");
        variant117.setCorrect(true);
        variantService.save(variant117);
        Variant variant118 = new Variant();
        variant118.setQuestion(question25);
        variant118.setName("риск разрушения системы управления организацией;");
        variantService.save(variant118);
        Variant variant119 = new Variant();
        variant119.setQuestion(question25);
        variant119.setName("общая система рисков, которым подвергнута организация;");
        variantService.save(variant119);
        Variant variant120 = new Variant();
        variant120.setQuestion(question25);
        variant120.setName("система оценки и управления рисками.");
        variantService.save(variant120);
        Question question26 = new Question();
        question26.setTestExemp(testExemp999);
        question26.setMaxCount(1);
        question26.setName("Деловой риск – это:");
        questionService.save(question26);
        Variant variant121 = new Variant();
        variant121.setQuestion(question26);
        variant121.setName(" риск неоплаты задолженности дебитором;");
        variant121.setCorrect(true);
        variantService.save(variant121);
        Variant variant122 = new Variant();
        variant122.setQuestion(question26);
        variant122.setName("риск провала коммерческого проекта;");
        variantService.save(variant122);
        Variant variant123 = new Variant();
        variant123.setQuestion(question26);
        variant123.setName("риск разрушения деловых отношений;");
        variantService.save(variant123);
        Variant variant124 = new Variant();
        variant124.setQuestion(question26);
        variant124.setName("риск неисполнения обязательств по договору купли-продажи.");
        variantService.save(variant124);
        Question question27 = new Question();
        question27.setTestExemp(testExemp999);
        question27.setMaxCount(1);
        question27.setName("Инновационный риск – это:");
        questionService.save(question27);
        Variant variant125 = new Variant();
        variant125.setQuestion(question27);
        variant125.setName("риск срыва сроков сдачи результатов научно-технических исследований;");
        variantService.save(variant125);
        Variant variant126 = new Variant();
        variant126.setQuestion(question27);
        variant126.setName("риск того, что новый товар не будет принят рынком;");
        variantService.save(variant126);
        Variant variant127 = new Variant();
        variant127.setQuestion(question27);
        variant127.setName(" риск того, что инновационный проект не будет реализован или окуплен;");
        variant127.setCorrect(true);
        variantService.save(variant127);
        Variant variant128 = new Variant();
        variant128.setQuestion(question27);
        variant128.setName("риск, связанный с утечкой информации об используемых фирмой иннова-циях.");
        variantService.save(variant128);
        Question question28 = new Question();
        question28.setTestExemp(testExemp999);
        question28.setMaxCount(1);
        question28.setName("Что их перечисленного не относится к видам производственных рисков?");
        questionService.save(question28);
        Variant variant129 = new Variant();
        variant129.setQuestion(question28);
        variant129.setName(" изменение конъюнктуры рынка;");
        variant129.setCorrect(true);
        variantService.save(variant129);
        Variant variant130 = new Variant();
        variant130.setQuestion(question28);
        variant130.setName("усиление конкуренции;");
        variantService.save(variant130);
        Variant variant131 = new Variant();
        variant131.setQuestion(question28);
        variant131.setName("форс-мажор;");
        variantService.save(variant131);
        Variant variant132 = new Variant();
        variant132.setQuestion(question28);
        variant132.setName("амортизация производственного оборудования.");
        variantService.save(variant132);
        Question question29 = new Question();
        question29.setTestExemp(testExemp999);
        question29.setMaxCount(1);
        question29.setName("По времени возникновения неопределенности распределяются на:");
        questionService.save(question29);
        Variant variant133 = new Variant();
        variant133.setQuestion(question29);
        variant133.setName(" ретроспективные, текущие и перспективные;");
        variant133.setCorrect(true);
        variantService.save(variant133);
        Variant variant134 = new Variant();
        variant134.setQuestion(question29);
        variant134.setName("экономические (коммерческие) и политические;");
        variantService.save(variant134);
        Variant variant135 = new Variant();
        variant135.setQuestion(question29);
        variant135.setName("новые и старые;");
        variantService.save(variant135);
        Variant variant136 = new Variant();
        variant136.setQuestion(question29);
        variant136.setName("изученные, изучаемые и неизученные.");
        variantService.save(variant136);
        Question question30 = new Question();
        question30.setTestExemp(testExemp999);
        question30.setMaxCount(1);
        question30.setName("По факторам возникновения неопределенности подразделяются на:");
        questionService.save(question30);
        Variant variant137 = new Variant();
        variant137.setQuestion(question30);
        variant137.setName("временные;");
        variantService.save(variant137);
        Variant variant138 = new Variant();
        variant138.setQuestion(question30);
        variant138.setName("природные;");
        variantService.save(variant138);
        Variant variant139 = new Variant();
        variant139.setQuestion(question30);
        variant139.setName(" экономические и политические;");
        variant139.setCorrect(true);
        variantService.save(variant139);
        Variant variant140 = new Variant();
        variant140.setQuestion(question30);
        variant140.setName("внешней и внутренней среды.");
        variantService.save(variant140);
        Question question31 = new Question();
        question31.setTestExemp(testExemp999);
        question31.setMaxCount(1);
        question31.setName("При наличии неопределенностей процесс выбора оптимальных ре-шений:");
        questionService.save(question31);
        Variant variant141 = new Variant();
        variant141.setQuestion(question31);
        variant141.setName(" усложняется;");
        variant141.setCorrect(true);
        variantService.save(variant141);
        Variant variant142 = new Variant();
        variant142.setQuestion(question31);
        variant142.setName("упрощается;");
        variantService.save(variant142);
        Variant variant143 = new Variant();
        variant143.setQuestion(question31);
        variant143.setName("остается неизменным.");
        variantService.save(variant143);
        Question question32 = new Question();
        question32.setTestExemp(testExemp999);
        question32.setMaxCount(1);
        question32.setName("Какой прогнозируемостью характеризуется наступления события (Pt) при полной определенности?");
        questionService.save(question32);
        Variant variant144 = new Variant();
        variant144.setQuestion(question32);
        variant144.setName("0,3;");
        variantService.save(variant144);
        Variant variant145 = new Variant();
        variant145.setQuestion(question32);
        variant145.setName("0,7;");
        variantService.save(variant145);
        Variant variant146 = new Variant();
        variant146.setQuestion(question32);
        variant146.setName(" близкой к единице;");
        variant146.setCorrect(true);
        variantService.save(variant146);
        Variant variant147 = new Variant();
        variant147.setQuestion(question32);
        variant147.setName("близкой к нулю.");
        variantService.save(variant147);
        Question question33 = new Question();
        question33.setTestExemp(testExemp999);
        question33.setMaxCount(1);
        question33.setName("Близкая к единице прогнозируемость событий соответствует:");
        questionService.save(question33);
        Variant variant148 = new Variant();
        variant148.setQuestion(question33);
        variant148.setName("полной неопределенности;");
        variantService.save(variant148);
        Variant variant149 = new Variant();
        variant149.setQuestion(question33);
        variant149.setName(" полной определенности;");
        variant149.setCorrect(true);
        variantService.save(variant149);
        Variant variant150 = new Variant();
        variant150.setQuestion(question33);
        variant150.setName("частичной неопределенности.");
        variantService.save(variant150);
        Question question34 = new Question();
        question34.setTestExemp(testExemp999);
        question34.setMaxCount(1);
        question34.setName("Неопределенность, связанную с отсутствием информации о вероят-ностях состояний среды (природы), называют:");
        questionService.save(question34);
        Variant variant151 = new Variant();
        variant151.setQuestion(question34);
        variant151.setName("сомнительной;");
        variantService.save(variant151);
        Variant variant152 = new Variant();
        variant152.setQuestion(question34);
        variant152.setName(" безнадежной;");
        variant152.setCorrect(true);
        variantService.save(variant152);
        Variant variant153 = new Variant();
        variant153.setQuestion(question34);
        variant153.setName("неопределенной;");
        variantService.save(variant153);
        Variant variant154 = new Variant();
        variant154.setQuestion(question34);
        variant154.setName("безвозвратной.");
        variantService.save(variant154);
        Question question35 = new Question();
        question35.setTestExemp(testExemp999);
        question35.setMaxCount(1);
        question35.setName("Критерий гарантированного результата (максимальный критерий ВальдRESP а) является критерием:");
        questionService.save(question35);
        Variant variant155 = new Variant();
        variant155.setQuestion(question35);
        variant155.setName("наименьшего вреда;");
        variantService.save(variant155);
        Variant variant156 = new Variant();
        variant156.setQuestion(question35);
        variant156.setName("наибольшего вреда;");
        variantService.save(variant156);
        Variant variant157 = new Variant();
        variant157.setQuestion(question35);
        variant157.setName("оптимистическим;");
        variantService.save(variant157);
        Variant variant158 = new Variant();
        variant158.setQuestion(question35);
        variant158.setName(" пессимистическим.");
        variant158.setCorrect(true);
        variantService.save(variant158);
        Question question36 = new Question();
        question36.setTestExemp(testExemp999);
        question36.setMaxCount(1);
        question36.setName("Критерий пессимизма характеризуется выбором:");
        questionService.save(question36);
        Variant variant159 = new Variant();
        variant159.setQuestion(question36);
        variant159.setName("лучшей альтернативы с худшим из всех худших значений окупаемости;");
        variantService.save(variant159);
        Variant variant160 = new Variant();
        variant160.setQuestion(question36);
        variant160.setName(" худшей альтернативы с худшим из всех худших значений окупаемости;");
        variant160.setCorrect(true);
        variantService.save(variant160);
        Variant variant161 = new Variant();
        variant161.setQuestion(question36);
        variant161.setName("худшей альтернативы с лучшим из всех худших значений окупаемости;");
        variantService.save(variant161);
        Variant variant162 = new Variant();
        variant162.setQuestion(question36);
        variant162.setName("лучшей альтернативы с лучшим из всех лучших значений окупаемости.");
        variantService.save(variant162);
        Question question37 = new Question();
        question37.setTestExemp(testExemp999);
        question37.setMaxCount(1);
        question37.setName("Чем рискованнее проект, тем норма его доходности должна быть:");
        questionService.save(question37);
        Variant variant163 = new Variant();
        variant163.setQuestion(question37);
        variant163.setName("ниже;");
        variantService.save(variant163);
        Variant variant164 = new Variant();
        variant164.setQuestion(question37);
        variant164.setName(" выше;");
        variant164.setCorrect(true);
        variantService.save(variant164);
        Variant variant165 = new Variant();
        variant165.setQuestion(question37);
        variant165.setName("норма доходности не зависит от риска.");
        variantService.save(variant165);
        Question question38 = new Question();
        question38.setTestExemp(testExemp999);
        question38.setMaxCount(1);
        question38.setName("Если событие не может произойти ни при каких условиях, его ве-роятность равна:");
        questionService.save(question38);
        Variant variant166 = new Variant();
        variant166.setQuestion(question38);
        variant166.setName(" нулю;");
        variant166.setCorrect(true);
        variantService.save(variant166);
        Variant variant167 = new Variant();
        variant167.setQuestion(question38);
        variant167.setName("единице;");
        variantService.save(variant167);
        Variant variant168 = new Variant();
        variant168.setQuestion(question38);
        variant168.setName("0,5;");
        variantService.save(variant168);
        Variant variant169 = new Variant();
        variant169.setQuestion(question38);
        variant169.setName("100%.");
        variantService.save(variant169);
        Question question39 = new Question();
        question39.setTestExemp(testExemp999);
        question39.setMaxCount(1);
        question39.setName("Какой метод оценки вероятностей используется в страховании?");
        questionService.save(question39);
        Variant variant170 = new Variant();
        variant170.setQuestion(question39);
        variant170.setName("система неопределенностей;");
        variantService.save(variant170);
        Variant variant171 = new Variant();
        variant171.setQuestion(question39);
        variant171.setName(" нормальное распределение;");
        variant171.setCorrect(true);
        variantService.save(variant171);
        Variant variant172 = new Variant();
        variant172.setQuestion(question39);
        variant172.setName("пороговые значения риска.");
        variantService.save(variant172);
        Question question40 = new Question();
        question40.setTestExemp(testExemp999);
        question40.setMaxCount(1);
        question40.setName("В процессе принятия управленческих решений предпринимателю целесообразно различать и выделять определенные области (зоны рискRESP а) в зависимости от уровня возможных (ожидаемых) потерь. Для этого разработаны и используются:");
        questionService.save(question40);
        Variant variant173 = new Variant();
        variant173.setQuestion(question40);
        variant173.setName("изометрические шкалы;");
        variantService.save(variant173);
        Variant variant174 = new Variant();
        variant174.setQuestion(question40);
        variant174.setName("шкалы воздействия;");
        variantService.save(variant174);
        Variant variant175 = new Variant();
        variant175.setQuestion(question40);
        variant175.setName(" шкалы риска.");
        variant175.setCorrect(true);
        variantService.save(variant175);
        Question question41 = new Question();
        question41.setTestExemp(testExemp999);
        question41.setMaxCount(1);
        question41.setName("Первая точка кривой рисков определяет:");
        questionService.save(question41);
        Variant variant176 = new Variant();
        variant176.setQuestion(question41);
        variant176.setName("величину потерь, равных расчетной выручке;");
        variantService.save(variant176);
        Variant variant177 = new Variant();
        variant177.setQuestion(question41);
        variant177.setName(" вероятность нулевых потерь;");
        variant177.setCorrect(true);
        variantService.save(variant177);
        Variant variant178 = new Variant();
        variant178.setQuestion(question41);
        variant178.setName("вероятности нежелательного исхода.");
        variantService.save(variant178);
        Question question42 = new Question();
        question42.setTestExemp(testExemp999);
        question42.setMaxCount(1);
        question42.setName("Вторая точка вероятности нежелательного исхода, соответствует:");
        questionService.save(question42);
        Variant variant179 = new Variant();
        variant179.setQuestion(question42);
        variant179.setName(" «нормальному», «разумному» риску, при котором рекомендуется принимать обычные предпринимательские решения;");
        variant179.setCorrect(true);
        variantService.save(variant179);
        Variant variant180 = new Variant();
        variant180.setQuestion(question42);
        variant180.setName("вероятности нежелательного исхода;");
        variantService.save(variant180);
        Variant variant181 = new Variant();
        variant181.setQuestion(question42);
        variant181.setName("потерям, равным имущественному состоянию предпринимателя.");
        variantService.save(variant181);
        Question question43 = new Question();
        question43.setTestExemp(testExemp999);
        question43.setMaxCount(1);
        question43.setName("Показатель допустимого риска не должен:");
        questionService.save(question43);
        Variant variant182 = new Variant();
        variant182.setQuestion(question43);
        variant182.setName(" превышать предельного значения;");
        variant182.setCorrect(true);
        variantService.save(variant182);
        Variant variant183 = new Variant();
        variant183.setQuestion(question43);
        variant183.setName("быть меньше предельной величины;");
        variantService.save(variant183);
        Variant variant184 = new Variant();
        variant184.setQuestion(question43);
        variant184.setName("быть равным нулю.");
        variantService.save(variant184);
        Question question44 = new Question();
        question44.setTestExemp(testExemp999);
        question44.setMaxCount(1);
        question44.setName("Экспертный метод может быть реализован:");
        questionService.save(question44);
        Variant variant185 = new Variant();
        variant185.setQuestion(question44);
        variant185.setName(" путем обработки мнений опытных предпринимателей и специали-стов;");
        variant185.setCorrect(true);
        variantService.save(variant185);
        Variant variant186 = new Variant();
        variant186.setQuestion(question44);
        variant186.setName("с помощью опроса респондентов;");
        variantService.save(variant186);
        Variant variant187 = new Variant();
        variant187.setQuestion(question44);
        variant187.setName("путем несистемной выборки.");
        variantService.save(variant187);
        Question question45 = new Question();
        question45.setTestExemp(testExemp999);
        question45.setMaxCount(1);
        question45.setName("Каждому эксперту, работающему отдельно, представляется:");
        questionService.save(question45);
        Variant variant188 = new Variant();
        variant188.setQuestion(question45);
        variant188.setName("помощник;");
        variantService.save(variant188);
        Variant variant189 = new Variant();
        variant189.setQuestion(question45);
        variant189.setName("устав компании;");
        variantService.save(variant189);
        Variant variant190 = new Variant();
        variant190.setQuestion(question45);
        variant190.setName(" перечень возможных рисков.");
        variant190.setCorrect(true);
        variantService.save(variant190);
        Question question46 = new Question();
        question46.setTestExemp(testExemp999);
        question46.setMaxCount(1);
        question46.setName("Оценки экспертов должны удовлетворять следующему правилу:");
        questionService.save(question46);
        Variant variant191 = new Variant();
        variant191.setQuestion(question46);
        variant191.setName(" максимально допустимая разница между оценками двух экспертов по любому виду риска не должна превышать 50;");
        variant191.setCorrect(true);
        variantService.save(variant191);
        Variant variant192 = new Variant();
        variant192.setQuestion(question46);
        variant192.setName("максимально допустимая разница между оценками двух экспертов по любому ви ду риска не должна превышать 25;");
        variantService.save(variant192);
        Variant variant193 = new Variant();
        variant193.setQuestion(question46);
        variant193.setName("максимально допустимая разница между оценками двух экспертов по любому ви ду риска не должна превышать 75.");
        variantService.save(variant193);
        Question question47 = new Question();
        question47.setTestExemp(testExemp999);
        question47.setMaxCount(1);
        question47.setName("Разновидностью экспертного метода является:");
        questionService.save(question47);
        Variant variant194 = new Variant();
        variant194.setQuestion(question47);
        variant194.setName(" метод Дельфи;");
        variant194.setCorrect(true);
        variantService.save(variant194);
        Variant variant195 = new Variant();
        variant195.setQuestion(question47);
        variant195.setName("метод Гаусса;");
        variantService.save(variant195);
        Variant variant196 = new Variant();
        variant196.setQuestion(question47);
        variant196.setName("метод Иванова.");
        variantService.save(variant196);
        Question question48 = new Question();
        question48.setTestExemp(testExemp999);
        question48.setMaxCount(1);
        question48.setName("При экспертной оценке предпринимательского риска большое внимание следует уделять:");
        questionService.save(question48);
        Variant variant197 = new Variant();
        variant197.setQuestion(question48);
        variant197.setName("типу предприятия;");
        variantService.save(variant197);
        Variant variant198 = new Variant();
        variant198.setQuestion(question48);
        variant198.setName(" подбору экспертов;");
        variant198.setCorrect(true);
        variantService.save(variant198);
        Variant variant199 = new Variant();
        variant199.setQuestion(question48);
        variant199.setName("величине предприятия.");
        variantService.save(variant199);
        Question question49 = new Question();
        question49.setTestExemp(testExemp999);
        question49.setMaxCount(1);
        question49.setName("Метод моделирования задачи выбора с помощью «дерева реше-ний» предполагает:");
        questionService.save(question49);
        Variant variant200 = new Variant();
        variant200.setQuestion(question49);
        variant200.setName("математическое построение вариантов решений;");
        variantService.save(variant200);
        Variant variant201 = new Variant();
        variant201.setQuestion(question49);
        variant201.setName("программное графическое построение вариантов решений;");
        variantService.save(variant201);
        Variant variant202 = new Variant();
        variant202.setQuestion(question49);
        variant202.setName(" графическое построение вариантов решений.");
        variant202.setCorrect(true);
        variantService.save(variant202);
        Question question50 = new Question();
        question50.setTestExemp(testExemp999);
        question50.setMaxCount(1);
        question50.setName("При использовании метода аналогий применяются:");
        questionService.save(question50);
        Variant variant203 = new Variant();
        variant203.setQuestion(question50);
        variant203.setName(" базы данных о риске аналогичных проектов или сделок;");
        variant203.setCorrect(true);
        variantService.save(variant203);
        Variant variant204 = new Variant();
        variant204.setQuestion(question50);
        variant204.setName("действия, которые намерен совершить предприниматель;");
        variantService.save(variant204);
        Variant variant205 = new Variant();
        variant205.setQuestion(question50);
        variant205.setName("анонимность и управляемая обратная связь.");
        variantService.save(variant205);
        Question question51 = new Question();
        question51.setTestExemp(testExemp999);
        question51.setMaxCount(1);
        question51.setName("Методы управления рисками, предполагающие исключение риско-вых ситуаций из бизнеса, носят название:");
        questionService.save(question51);
        Variant variant206 = new Variant();
        variant206.setQuestion(question51);
        variant206.setName("методы диссипации риска;");
        variantService.save(variant206);
        Variant variant207 = new Variant();
        variant207.setQuestion(question51);
        variant207.setName("методы компенсации риска;");
        variantService.save(variant207);
        Variant variant208 = new Variant();
        variant208.setQuestion(question51);
        variant208.setName(" методы уклонения от риска;");
        variant208.setCorrect(true);
        variantService.save(variant208);
        Variant variant209 = new Variant();
        variant209.setQuestion(question51);
        variant209.setName("методы локализации риска.");
        variantService.save(variant209);
        Question question52 = new Question();
        question52.setTestExemp(testExemp999);
        question52.setMaxCount(1);
        question52.setName("Методы управления рисками, основанные на четкой идентифика-ции источников риска, носят название:");
        questionService.save(question52);
        Variant variant210 = new Variant();
        variant210.setQuestion(question52);
        variant210.setName("методы диссипации риска;");
        variantService.save(variant210);
        Variant variant211 = new Variant();
        variant211.setQuestion(question52);
        variant211.setName("методы компенсации риска;");
        variantService.save(variant211);
        Variant variant212 = new Variant();
        variant212.setQuestion(question52);
        variant212.setName("методы уклонения от риска;");
        variantService.save(variant212);
        Variant variant213 = new Variant();
        variant213.setQuestion(question52);
        variant213.setName(" методы локализации риска.");
        variant213.setCorrect(true);
        variantService.save(variant213);
        Question question53 = new Question();
        question53.setTestExemp(testExemp999);
        question53.setMaxCount(1);
        question53.setName("Методы управления рисками, относящиеся к упреждающим мето-дам управления, носят название:");
        questionService.save(question53);
        Variant variant214 = new Variant();
        variant214.setQuestion(question53);
        variant214.setName("методы диссипации риска;");
        variantService.save(variant214);
        Variant variant215 = new Variant();
        variant215.setQuestion(question53);
        variant215.setName(" методы компенсации риска;");
        variant215.setCorrect(true);
        variantService.save(variant215);
        Variant variant216 = new Variant();
        variant216.setQuestion(question53);
        variant216.setName("методы уклонения от риска;");
        variantService.save(variant216);
        Variant variant217 = new Variant();
        variant217.setQuestion(question53);
        variant217.setName("методы локализации риска.");
        variantService.save(variant217);
        Question question54 = new Question();
        question54.setTestExemp(testExemp999);
        question54.setMaxCount(1);
        question54.setName("Методы управления рисками, связанные с распределением риска между стратегическими партнерами, носят название:");
        questionService.save(question54);
        Variant variant218 = new Variant();
        variant218.setQuestion(question54);
        variant218.setName(" методы диссипации риска;");
        variant218.setCorrect(true);
        variantService.save(variant218);
        Variant variant219 = new Variant();
        variant219.setQuestion(question54);
        variant219.setName("методы компенсации риска;");
        variantService.save(variant219);
        Variant variant220 = new Variant();
        variant220.setQuestion(question54);
        variant220.setName("методы уклонения от риска;");
        variantService.save(variant220);
        Variant variant221 = new Variant();
        variant221.setQuestion(question54);
        variant221.setName("методы локализации риска.");
        variantService.save(variant221);
        Question question55 = new Question();
        question55.setTestExemp(testExemp999);
        question55.setMaxCount(1);
        question55.setName("Интеграция, предполагающая объединение с поставщиками, – это:");
        questionService.save(question55);
        Variant variant222 = new Variant();
        variant222.setQuestion(question55);
        variant222.setName(" вертикальная регрессивная (обратная) интеграция;");
        variant222.setCorrect(true);
        variantService.save(variant222);
        Variant variant223 = new Variant();
        variant223.setQuestion(question55);
        variant223.setName("вертикальная прогрессивная (прямая) интеграция;");
        variantService.save(variant223);
        Variant variant224 = new Variant();
        variant224.setQuestion(question55);
        variant224.setName("горизонтальная интеграция;");
        variantService.save(variant224);
        Variant variant225 = new Variant();
        variant225.setQuestion(question55);
        variant225.setName("круговая интеграция.");
        variantService.save(variant225);
        Question question56 = new Question();
        question56.setTestExemp(testExemp999);
        question56.setMaxCount(1);
        question56.setName("Финансирование под уступку денежного требования, подразумева-ющее передачу кредитного риска, это лежит в основе:");
        questionService.save(question56);
        Variant variant226 = new Variant();
        variant226.setQuestion(question56);
        variant226.setName("биржевых сделок;");
        variantService.save(variant226);
        Variant variant227 = new Variant();
        variant227.setQuestion(question56);
        variant227.setName("строительных контрактов;");
        variantService.save(variant227);
        Variant variant228 = new Variant();
        variant228.setQuestion(question56);
        variant228.setName("контракта – поручительства;");
        variantService.save(variant228);
        Variant variant229 = new Variant();
        variant229.setQuestion(question56);
        variant229.setName(" договора факторинга.");
        variant229.setCorrect(true);
        variantService.save(variant229);
        Question question57 = new Question();
        question57.setTestExemp(testExemp999);
        question57.setMaxCount(1);
        question57.setName("Интеграция, подразумевающая объединение с посредниками, обра-зующими дистрибьюторскую сеть по сбыту продукции предприя-тия, – это:");
        questionService.save(question57);
        Variant variant230 = new Variant();
        variant230.setQuestion(question57);
        variant230.setName("вертикальная регрессивная (обратная) интеграция;");
        variantService.save(variant230);
        Variant variant231 = new Variant();
        variant231.setQuestion(question57);
        variant231.setName(" вертикальная прогрессивная (прямая) интеграция;");
        variant231.setCorrect(true);
        variantService.save(variant231);
        Variant variant232 = new Variant();
        variant232.setQuestion(question57);
        variant232.setName("горизонтальная интеграция;");
        variantService.save(variant232);
        Variant variant233 = new Variant();
        variant233.setQuestion(question57);
        variant233.setName("круговая интеграция.");
        variantService.save(variant233);
        Question question58 = new Question();
        question58.setTestExemp(testExemp999);
        question58.setMaxCount(1);
        question58.setName("Интеграция, предполагающая объединение с конкурентами, – это:");
        questionService.save(question58);
        Variant variant234 = new Variant();
        variant234.setQuestion(question58);
        variant234.setName("вертикальная регрессивная (обратная) интеграция;");
        variantService.save(variant234);
        Variant variant235 = new Variant();
        variant235.setQuestion(question58);
        variant235.setName("вертикальная прогрессивная (прямая) интеграция;");
        variantService.save(variant235);
        Variant variant236 = new Variant();
        variant236.setQuestion(question58);
        variant236.setName(" горизонтальная интеграция;");
        variant236.setCorrect(true);
        variantService.save(variant236);
        Variant variant237 = new Variant();
        variant237.setQuestion(question58);
        variant237.setName("круговая интеграция.");
        variantService.save(variant237);
        Question question59 = new Question();
        question59.setTestExemp(testExemp999);
        question59.setMaxCount(1);
        question59.setName("Объединение организаций, осуществляющих разные виды деятель-ности для достижения совместных стратегических целей, – это:");
        questionService.save(question59);
        Variant variant238 = new Variant();
        variant238.setQuestion(question59);
        variant238.setName("вертикальная регрессивная (обратная) интеграция;");
        variantService.save(variant238);
        Variant variant239 = new Variant();
        variant239.setQuestion(question59);
        variant239.setName("вертикальная прогрессивная (прямая) интеграция;");
        variantService.save(variant239);
        Variant variant240 = new Variant();
        variant240.setQuestion(question59);
        variant240.setName("горизонтальная интеграция;");
        variantService.save(variant240);
        Variant variant241 = new Variant();
        variant241.setQuestion(question59);
        variant241.setName(" круговая интеграция.");
        variant241.setCorrect(true);
        variantService.save(variant241);
        Question question60 = new Question();
        question60.setTestExemp(testExemp999);
        question60.setMaxCount(1);
        question60.setName("Процесс снижение риска за счет увеличения разнообразия видов деятельности, рынков сбыта или каналов поставок носит название:");
        questionService.save(question60);
        Variant variant242 = new Variant();
        variant242.setQuestion(question60);
        variant242.setName("конвергенция;");
        variantService.save(variant242);
        Variant variant243 = new Variant();
        variant243.setQuestion(question60);
        variant243.setName("фокусирование;");
        variantService.save(variant243);
        Variant variant244 = new Variant();
        variant244.setQuestion(question60);
        variant244.setName(" диверсификация;");
        variant244.setCorrect(true);
        variantService.save(variant244);
        Variant variant245 = new Variant();
        variant245.setQuestion(question60);
        variant245.setName("дифференцирование.");
        variantService.save(variant245);
        Question question61 = new Question();
        question61.setTestExemp(testExemp999);
        question61.setMaxCount(1);
        question61.setName("Снижение риска за счет увеличения количества поставщиков, поз-воляющего ослабить зависимость предприятия от конкретного по-ставщика, – это:");
        questionService.save(question61);
        Variant variant246 = new Variant();
        variant246.setQuestion(question61);
        variant246.setName("диверсификация рынка сбыта (развитие рынкRESP а);");
        variantService.save(variant246);
        Variant variant247 = new Variant();
        variant247.setQuestion(question61);
        variant247.setName("диверсификация видов хозяйственной деятельности;");
        variantService.save(variant247);
        Variant variant248 = new Variant();
        variant248.setQuestion(question61);
        variant248.setName(" диверсификация закупок;");
        variant248.setCorrect(true);
        variantService.save(variant248);
        Variant variant249 = new Variant();
        variant249.setQuestion(question61);
        variant249.setName("диверсификация инвестиций.");
        variantService.save(variant249);
        Question question62 = new Question();
        question62.setTestExemp(testExemp999);
        question62.setMaxCount(1);
        question62.setName("Снижение риска за счет распределения готовой продукции пред-приятия между несколькими рынками или контрагентами – это:");
        questionService.save(question62);
        Variant variant250 = new Variant();
        variant250.setQuestion(question62);
        variant250.setName(" диверсификация рынка сбыта (развитие рынкRESP а);");
        variant250.setCorrect(true);
        variantService.save(variant250);
        Variant variant251 = new Variant();
        variant251.setQuestion(question62);
        variant251.setName("диверсификация видов хозяйственной деятельности;");
        variantService.save(variant251);
        Variant variant252 = new Variant();
        variant252.setQuestion(question62);
        variant252.setName("диверсификация закупок;");
        variantService.save(variant252);
        Variant variant253 = new Variant();
        variant253.setQuestion(question62);
        variant253.setName("диверсификация инвестиций.");
        variantService.save(variant253);
        Question question63 = new Question();
        question63.setTestExemp(testExemp999);
        question63.setMaxCount(1);
        question63.setName("Снижение риска за счет расширения ассортимента выпускаемой продукции, оказываемых услуг, спектра используемых технологий – это:");
        questionService.save(question63);
        Variant variant254 = new Variant();
        variant254.setQuestion(question63);
        variant254.setName("диверсификация рынка сбыта (развитие рынкRESP а);");
        variantService.save(variant254);
        Variant variant255 = new Variant();
        variant255.setQuestion(question63);
        variant255.setName(" диверсификация видов хозяйственной деятельности;");
        variant255.setCorrect(true);
        variantService.save(variant255);
        Variant variant256 = new Variant();
        variant256.setQuestion(question63);
        variant256.setName("диверсификация закупок;");
        variantService.save(variant256);
        Variant variant257 = new Variant();
        variant257.setQuestion(question63);
        variant257.setName("диверсификация инвестиций.");
        variantService.save(variant257);
        Question question64 = new Question();
        question64.setTestExemp(testExemp999);
        question64.setMaxCount(1);
        question64.setName("Диссипация риска при формировании инвестиционного портфеля, предполагающего реализацию одновременно нескольких проектов, носит название:");
        questionService.save(question64);
        Variant variant258 = new Variant();
        variant258.setQuestion(question64);
        variant258.setName("диверсификация рынка сбыта (развитие рынкRESP а);");
        variantService.save(variant258);
        Variant variant259 = new Variant();
        variant259.setQuestion(question64);
        variant259.setName("диверсификация видов хозяйственной деятельности;");
        variantService.save(variant259);
        Variant variant260 = new Variant();
        variant260.setQuestion(question64);
        variant260.setName("диверсификация закупок;");
        variantService.save(variant260);
        Variant variant261 = new Variant();
        variant261.setQuestion(question64);
        variant261.setName(" диверсификация инвестиций.");
        variant261.setCorrect(true);
        variantService.save(variant261);
        Question question65 = new Question();
        question65.setTestExemp(testExemp999);
        question65.setMaxCount(1);
        question65.setName("Прогнозирование внешней экономической обстановки, стратегиче-ское планирование, мониторинг социально-экономической и нор-мативно-правовой среды, создание системы резервов – все это ин-струментарий:");
        questionService.save(question65);
        Variant variant262 = new Variant();
        variant262.setQuestion(question65);
        variant262.setName("методов диссипации риска;");
        variantService.save(variant262);
        Variant variant263 = new Variant();
        variant263.setQuestion(question65);
        variant263.setName(" методов компенсации риска;");
        variant263.setCorrect(true);
        variantService.save(variant263);
        Variant variant264 = new Variant();
        variant264.setQuestion(question65);
        variant264.setName("методов уклонения от риска;");
        variantService.save(variant264);
        Variant variant265 = new Variant();
        variant265.setQuestion(question65);
        variant265.setName("методов локализации риска.");
        variantService.save(variant265);
        Question question66 = new Question();
        question66.setTestExemp(testExemp999);
        question66.setMaxCount(1);
        question66.setName("При использовании метода «Сокращение риска» покрытие убытка происходит за счет:");
        questionService.save(question66);
        Variant variant266 = new Variant();
        variant266.setQuestion(question66);
        variant266.setName("нестрахового пула;");
        variantService.save(variant266);
        Variant variant267 = new Variant();
        variant267.setQuestion(question66);
        variant267.setName(" резервов;");
        variant267.setCorrect(true);
        variantService.save(variant267);
        Variant variant268 = new Variant();
        variant268.setQuestion(question66);
        variant268.setName("спонсора;");
        variantService.save(variant268);
        Variant variant269 = new Variant();
        variant269.setQuestion(question66);
        variant269.setName("государственной поддержки.");
        variantService.save(variant269);
        Question question67 = new Question();
        question67.setTestExemp(testExemp999);
        question67.setMaxCount(1);
        question67.setName("При использовании метода «Передача риска» покрытие убытка происходит за счет:");
        questionService.save(question67);
        Variant variant270 = new Variant();
        variant270.setQuestion(question67);
        variant270.setName("самострахования;");
        variantService.save(variant270);
        Variant variant271 = new Variant();
        variant271.setQuestion(question67);
        variant271.setName("займа;");
        variantService.save(variant271);
        Variant variant272 = new Variant();
        variant272.setQuestion(question67);
        variant272.setName("резервов;");
        variantService.save(variant272);
        Variant variant273 = new Variant();
        variant273.setQuestion(question67);
        variant273.setName(" страхования.");
        variant273.setCorrect(true);
        variantService.save(variant273);
        Question question68 = new Question();
        question68.setTestExemp(testExemp999);
        question68.setMaxCount(1);
        question68.setName("При покрытии убытка из текущего дохода происходит ли на пред-приятии создание каких-либо фондов?");
        questionService.save(question68);
        Variant variant274 = new Variant();
        variant274.setQuestion(question68);
        variant274.setName("да;");
        variantService.save(variant274);
        Variant variant275 = new Variant();
        variant275.setQuestion(question68);
        variant275.setName(" нет;");
        variant275.setCorrect(true);
        variantService.save(variant275);
        Variant variant276 = new Variant();
        variant276.setQuestion(question68);
        variant276.setName("фонды могут быть созданы по решению руководства предприятия.");
        variantService.save(variant276);
        Question question69 = new Question();
        question69.setTestExemp(testExemp999);
        question69.setMaxCount(1);
        question69.setName(" Примером покрытия ущерба за счет передачи ответственности на основе договора является:");
        questionService.save(question69);
        Variant variant277 = new Variant();
        variant277.setQuestion(question69);
        variant277.setName(" хеджирование;");
        variant277.setCorrect(true);
        variantService.save(variant277);
        Variant variant278 = new Variant();
        variant278.setQuestion(question69);
        variant278.setName("кэптиновые страховые организации;");
        variantService.save(variant278);
        Variant variant279 = new Variant();
        variant279.setQuestion(question69);
        variant279.setName("нестраховой пул;");
        variantService.save(variant279);
        Variant variant280 = new Variant();
        variant280.setQuestion(question69);
        variant280.setName("самострахование.");
        variantService.save(variant280);
        Question question70 = new Question();
        question70.setTestExemp(testExemp999);
        question70.setMaxCount(1);
        question70.setName("При покрытии убытка на основе поддержки государственных либо муниципальных органов к специфическим рискам относят:");
        questionService.save(question70);
        Variant variant281 = new Variant();
        variant281.setQuestion(question70);
        variant281.setName("риски, связанные с внешнеэкономической деятельностью;");
        variantService.save(variant281);
        Variant variant282 = new Variant();
        variant282.setQuestion(question70);
        variant282.setName("риски, связанные с массовым разрушением собственности;");
        variantService.save(variant282);
        Variant variant283 = new Variant();
        variant283.setQuestion(question70);
        variant283.setName(" риск изменения цен на товары.");
        variant283.setCorrect(true);
        variantService.save(variant283);
        Question question71 = new Question();
        question71.setTestExemp(testExemp999);
        question71.setMaxCount(1);
        question71.setName("К покрытию убытка на основе страхования прибегают в следую-щих случаях:");
        questionService.save(question71);
        Variant variant284 = new Variant();
        variant284.setQuestion(question71);
        variant284.setName("инвестирование средств страховых фондов в пределах одной деловой единицы;");
        variantService.save(variant284);
        Variant variant285 = new Variant();
        variant285.setQuestion(question71);
        variant285.setName("сохранение прибыли внутри соответствующей группы;");
        variantService.save(variant285);
        Variant variant286 = new Variant();
        variant286.setQuestion(question71);
        variant286.setName("получение льгот по налогообложению (которые могут быть предусмот-рены в ряде стран);");
        variantService.save(variant286);
        Variant variant287 = new Variant();
        variant287.setQuestion(question71);
        variant287.setName(" если существуют большие совокупности рисков, вероятность реализации которых велика, а суммы предполагаемого ущерба небольшие.");
        variant287.setCorrect(true);
        variantService.save(variant287);
        Question question72 = new Question();
        question72.setTestExemp(testExemp999);
        question72.setMaxCount(1);
        question72.setName("Основным недостатком кэптиновых компаний является:");
        questionService.save(question72);
        Variant variant288 = new Variant();
        variant288.setQuestion(question72);
        variant288.setName("использование этого инструмента возможно только после возникновения ущерба;");
        variantService.save(variant288);
        Variant variant289 = new Variant();
        variant289.setQuestion(question72);
        variant289.setName("возможность получения покрытия только незначительного ущерба;");
        variantService.save(variant289);
        Variant variant290 = new Variant();
        variant290.setQuestion(question72);
        variant290.setName(" в случае ущерба кэптиновой компании, он распределяется между всеми участниками.");
        variant290.setCorrect(true);
        variantService.save(variant290);
        Question question73 = new Question();
        question73.setTestExemp(testExemp999);
        question73.setMaxCount(1);
        question73.setName("При выборе метода покрытия убытка за счет использования займа особое внимание следует уделить исследованию:");
        questionService.save(question73);
        Variant variant291 = new Variant();
        variant291.setQuestion(question73);
        variant291.setName("величины текущих денежных потоков организации;");
        variantService.save(variant291);
        Variant variant292 = new Variant();
        variant292.setQuestion(question73);
        variant292.setName(" ликвидности и возвратности займа;");
        variant292.setCorrect(true);
        variantService.save(variant292);
        Variant variant293 = new Variant();
        variant293.setQuestion(question73);
        variant293.setName("порогового значения вероятного ущерба.");
        variantService.save(variant293);
        Question question74 = new Question();
        question74.setTestExemp(testExemp999);
        question74.setMaxCount(1);
        question74.setName("Кэптивновая компания – это:");
        questionService.save(question74);
        Variant variant294 = new Variant();
        variant294.setQuestion(question74);
        variant294.setName("не страховая компания;");
        variantService.save(variant294);
        Variant variant295 = new Variant();
        variant295.setQuestion(question74);
        variant295.setName("другое название финансово-промышленной группы;");
        variantService.save(variant295);
        Variant variant296 = new Variant();
        variant296.setQuestion(question74);
        variant296.setName(" это страховая компания, входящая в состав не страховых организаций;");
        variant296.setCorrect(true);
        variantService.save(variant296);
        Variant variant297 = new Variant();
        variant297.setQuestion(question74);
        variant297.setName("компания-спонсор.");
        variantService.save(variant297);
        Question question75 = new Question();
        question75.setTestExemp(testExemp999);
        question75.setMaxCount(1);
        question75.setName("Метод покрытия убытков из текущих доходов используют, если:");
        questionService.save(question75);
        Variant variant298 = new Variant();
        variant298.setQuestion(question75);
        variant298.setName(" величина убытков не велика;");
        variant298.setCorrect(true);
        variantService.save(variant298);
        Variant variant299 = new Variant();
        variant299.setQuestion(question75);
        variant299.setName("величина убытков велика;");
        variantService.save(variant299);
        Variant variant300 = new Variant();
        variant300.setQuestion(question75);
        variant300.setName(" это не искажает денежных потоков;");
        variant300.setCorrect(true);
        variantService.save(variant300);
        Variant variant301 = new Variant();
        variant301.setQuestion(question75);
        variant301.setName("организация хочет возложить ответственность за возмещение возможного ущерба на специализированную организацию.");
        variantService.save(variant301);
        Question question76 = new Question();
        question76.setTestExemp(testExemp999);
        question76.setMaxCount(1);
        question76.setName("Особенностью метода покрытия убытка на основе самострахова-ния является:");
        questionService.save(question76);
        Variant variant302 = new Variant();
        variant302.setQuestion(question76);
        variant302.setName(" работа с большим числом однородных рисков;");
        variant302.setCorrect(true);
        variantService.save(variant302);
        Variant variant303 = new Variant();
        variant303.setQuestion(question76);
        variant303.setName("работа только с неоднородными рисками;");
        variantService.save(variant303);
        Variant variant304 = new Variant();
        variant304.setQuestion(question76);
        variant304.setName("работа с катастрофическими рисками.");
        variantService.save(variant304);

    }
}
